{
  "address": "8JaW8fhu46ii83WapMp64i4B4bKTM76XUSXftJfHfLyg",
  "metadata": {
    "name": "baskt",
    "version": "0.1.0",
    "spec": "0.1.0",
    "description": "Created with Anchor"
  },
  "instructions": [
    {
      "name": "activate_baskt",
      "discriminator": [
        192,
        71,
        227,
        111,
        125,
        60,
        4,
        56
      ],
      "accounts": [
        {
          "name": "baskt",
          "writable": true
        },
        {
          "name": "protocol",
          "docs": [
            "@dev Requires either baskt creator or OracleManager role to activate baskts"
          ],
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  112,
                  114,
                  111,
                  116,
                  111,
                  99,
                  111,
                  108
                ]
              }
            ]
          }
        },
        {
          "name": "authority",
          "writable": true,
          "signer": true
        }
      ],
      "args": [
        {
          "name": "params",
          "type": {
            "defined": {
              "name": "ActivateBasktParams"
            }
          }
        }
      ]
    },
    {
      "name": "add_asset",
      "discriminator": [
        81,
        53,
        134,
        142,
        243,
        73,
        42,
        179
      ],
      "accounts": [
        {
          "name": "admin",
          "docs": [
            "@dev Requires AssetManager role to add new assets"
          ],
          "writable": true,
          "signer": true
        },
        {
          "name": "asset",
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  97,
                  115,
                  115,
                  101,
                  116
                ]
              },
              {
                "kind": "arg",
                "path": "params.ticker"
              }
            ]
          }
        },
        {
          "name": "protocol",
          "docs": [
            "Protocol account for access control check"
          ],
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  112,
                  114,
                  111,
                  116,
                  111,
                  99,
                  111,
                  108
                ]
              }
            ]
          }
        },
        {
          "name": "system_program",
          "address": "11111111111111111111111111111111"
        }
      ],
      "args": [
        {
          "name": "params",
          "type": {
            "defined": {
              "name": "AddAssetParams"
            }
          }
        }
      ]
    },
    {
      "name": "add_collateral",
      "discriminator": [
        127,
        82,
        121,
        42,
        161,
        176,
        249,
        206
      ],
      "accounts": [
        {
          "name": "owner",
          "writable": true,
          "signer": true
        },
        {
          "name": "position",
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  112,
                  111,
                  115,
                  105,
                  116,
                  105,
                  111,
                  110
                ]
              },
              {
                "kind": "account",
                "path": "owner"
              },
              {
                "kind": "account",
                "path": "position.position_id",
                "account": "Position"
              }
            ]
          }
        },
        {
          "name": "owner_token",
          "writable": true
        },
        {
          "name": "escrow_token",
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  101,
                  115,
                  99,
                  114,
                  111,
                  119
                ]
              },
              {
                "kind": "account",
                "path": "position"
              }
            ]
          }
        },
        {
          "name": "program_authority",
          "docs": [
            "PDA used for token authority over escrow"
          ],
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  97,
                  117,
                  116,
                  104,
                  111,
                  114,
                  105,
                  116,
                  121
                ]
              }
            ]
          }
        },
        {
          "name": "protocol",
          "docs": [
            "Protocol account - required for validating the feature flag"
          ],
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  112,
                  114,
                  111,
                  116,
                  111,
                  99,
                  111,
                  108
                ]
              }
            ]
          }
        },
        {
          "name": "token_program",
          "address": "TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA"
        }
      ],
      "args": [
        {
          "name": "params",
          "type": {
            "defined": {
              "name": "AddCollateralParams"
            }
          }
        }
      ]
    },
    {
      "name": "add_liquidity",
      "discriminator": [
        181,
        157,
        89,
        67,
        143,
        182,
        52,
        72
      ],
      "accounts": [
        {
          "name": "provider",
          "docs": [
            "The liquidity provider"
          ],
          "writable": true,
          "signer": true
        },
        {
          "name": "liquidity_pool",
          "docs": [
            "The liquidity pool account"
          ],
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  108,
                  105,
                  113,
                  117,
                  105,
                  100,
                  105,
                  116,
                  121,
                  95,
                  112,
                  111,
                  111,
                  108
                ]
              }
            ]
          }
        },
        {
          "name": "protocol",
          "docs": [
            "Protocol account to verify feature flags"
          ],
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  112,
                  114,
                  111,
                  116,
                  111,
                  99,
                  111,
                  108
                ]
              }
            ]
          }
        },
        {
          "name": "provider_token_account",
          "docs": [
            "The provider's token account to withdraw funds from"
          ],
          "writable": true
        },
        {
          "name": "token_vault",
          "docs": [
            "The vault that holds the pool's assets"
          ],
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  116,
                  111,
                  107,
                  101,
                  110,
                  95,
                  118,
                  97,
                  117,
                  108,
                  116
                ]
              },
              {
                "kind": "account",
                "path": "liquidity_pool"
              }
            ]
          }
        },
        {
          "name": "provider_lp_account",
          "docs": [
            "The provider's LP token account to receive LP tokens"
          ],
          "writable": true
        },
        {
          "name": "lp_mint",
          "docs": [
            "The LP token mint"
          ],
          "writable": true
        },
        {
          "name": "treasury_token_account",
          "docs": [
            "The treasury token account to receive fees"
          ],
          "writable": true
        },
        {
          "name": "treasury"
        },
        {
          "name": "pool_authority",
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  112,
                  111,
                  111,
                  108,
                  95,
                  97,
                  117,
                  116,
                  104,
                  111,
                  114,
                  105,
                  116,
                  121
                ]
              },
              {
                "kind": "account",
                "path": "liquidity_pool"
              },
              {
                "kind": "account",
                "path": "protocol"
              }
            ]
          }
        },
        {
          "name": "token_program",
          "address": "TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA"
        }
      ],
      "args": [
        {
          "name": "amount",
          "type": "u64"
        },
        {
          "name": "min_shares_out",
          "type": "u64"
        }
      ]
    },
    {
      "name": "add_role",
      "discriminator": [
        45,
        20,
        52,
        132,
        56,
        24,
        179,
        37
      ],
      "accounts": [
        {
          "name": "owner",
          "docs": [
            "@dev Requires Owner role to assign roles to other accounts"
          ],
          "writable": true,
          "signer": true
        },
        {
          "name": "account",
          "docs": [
            "Account to assign the role to"
          ]
        },
        {
          "name": "protocol",
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  112,
                  114,
                  111,
                  116,
                  111,
                  99,
                  111,
                  108
                ]
              }
            ]
          }
        }
      ],
      "args": [
        {
          "name": "role_type",
          "type": "u8"
        }
      ]
    },
    {
      "name": "cancel_order",
      "discriminator": [
        95,
        129,
        237,
        240,
        8,
        49,
        223,
        132
      ],
      "accounts": [
        {
          "name": "owner",
          "writable": true,
          "signer": true
        },
        {
          "name": "order",
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  111,
                  114,
                  100,
                  101,
                  114
                ]
              },
              {
                "kind": "account",
                "path": "owner"
              },
              {
                "kind": "account",
                "path": "order.order_id",
                "account": "Order"
              }
            ]
          }
        },
        {
          "name": "owner_token",
          "writable": true
        },
        {
          "name": "escrow_token",
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  117,
                  115,
                  101,
                  114,
                  95,
                  101,
                  115,
                  99,
                  114,
                  111,
                  119
                ]
              },
              {
                "kind": "account",
                "path": "owner"
              }
            ]
          }
        },
        {
          "name": "program_authority",
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  97,
                  117,
                  116,
                  104,
                  111,
                  114,
                  105,
                  116,
                  121
                ]
              }
            ]
          }
        },
        {
          "name": "protocol",
          "docs": [
            "Protocol account to verify feature flags"
          ],
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  112,
                  114,
                  111,
                  116,
                  111,
                  99,
                  111,
                  108
                ]
              }
            ]
          }
        },
        {
          "name": "token_program",
          "address": "TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA"
        }
      ],
      "args": []
    },
    {
      "name": "close_baskt",
      "discriminator": [
        179,
        197,
        59,
        154,
        196,
        169,
        95,
        50
      ],
      "accounts": [
        {
          "name": "baskt",
          "writable": true
        },
        {
          "name": "authority",
          "docs": [
            "Authority that can close baskt (OracleManager)"
          ],
          "signer": true
        },
        {
          "name": "protocol",
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  112,
                  114,
                  111,
                  116,
                  111,
                  99,
                  111,
                  108
                ]
              }
            ]
          }
        }
      ],
      "args": []
    },
    {
      "name": "close_position",
      "discriminator": [
        123,
        134,
        81,
        0,
        49,
        68,
        98,
        98
      ],
      "accounts": [
        {
          "name": "matcher",
          "writable": true,
          "signer": true
        },
        {
          "name": "order",
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  111,
                  114,
                  100,
                  101,
                  114
                ]
              },
              {
                "kind": "account",
                "path": "order.owner",
                "account": "Order"
              },
              {
                "kind": "account",
                "path": "order.order_id",
                "account": "Order"
              }
            ]
          }
        },
        {
          "name": "position",
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  112,
                  111,
                  115,
                  105,
                  116,
                  105,
                  111,
                  110
                ]
              },
              {
                "kind": "account",
                "path": "position.owner",
                "account": "Position"
              },
              {
                "kind": "account",
                "path": "position.position_id",
                "account": "Position"
              }
            ]
          }
        },
        {
          "name": "funding_index",
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  102,
                  117,
                  110,
                  100,
                  105,
                  110,
                  103,
                  95,
                  105,
                  110,
                  100,
                  101,
                  120
                ]
              },
              {
                "kind": "account",
                "path": "position.baskt_id",
                "account": "Position"
              }
            ]
          }
        },
        {
          "name": "baskt",
          "writable": true
        },
        {
          "name": "protocol",
          "docs": [
            "Protocol for permission checks"
          ],
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  112,
                  114,
                  111,
                  116,
                  111,
                  99,
                  111,
                  108
                ]
              }
            ]
          }
        },
        {
          "name": "liquidity_pool",
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  108,
                  105,
                  113,
                  117,
                  105,
                  100,
                  105,
                  116,
                  121,
                  95,
                  112,
                  111,
                  111,
                  108
                ]
              }
            ]
          }
        },
        {
          "name": "treasury"
        },
        {
          "name": "escrow_token",
          "docs": [
            "Position escrow token account"
          ],
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  101,
                  115,
                  99,
                  114,
                  111,
                  119
                ]
              },
              {
                "kind": "account",
                "path": "position"
              }
            ]
          }
        },
        {
          "name": "program_authority",
          "docs": [
            "PDA used for token authority over escrow - still needed for CPI signing"
          ],
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  97,
                  117,
                  116,
                  104,
                  111,
                  114,
                  105,
                  116,
                  121
                ]
              }
            ]
          }
        },
        {
          "name": "pool_authority",
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  112,
                  111,
                  111,
                  108,
                  95,
                  97,
                  117,
                  116,
                  104,
                  111,
                  114,
                  105,
                  116,
                  121
                ]
              },
              {
                "kind": "account",
                "path": "liquidity_pool"
              },
              {
                "kind": "account",
                "path": "protocol"
              }
            ]
          }
        },
        {
          "name": "token_program",
          "address": "TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA"
        }
      ],
      "args": [
        {
          "name": "params",
          "type": {
            "defined": {
              "name": "ClosePositionParams"
            }
          }
        }
      ]
    },
    {
      "name": "create_baskt",
      "discriminator": [
        179,
        137,
        71,
        8,
        178,
        191,
        25,
        167
      ],
      "accounts": [
        {
          "name": "baskt",
          "writable": true
        },
        {
          "name": "creator",
          "writable": true,
          "signer": true
        },
        {
          "name": "protocol",
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  112,
                  114,
                  111,
                  116,
                  111,
                  99,
                  111,
                  108
                ]
              }
            ]
          }
        },
        {
          "name": "system_program",
          "address": "11111111111111111111111111111111"
        }
      ],
      "args": [
        {
          "name": "params",
          "type": {
            "defined": {
              "name": "CreateBasktParams"
            }
          }
        }
      ]
    },
    {
      "name": "create_order",
      "discriminator": [
        141,
        54,
        37,
        207,
        237,
        210,
        250,
        215
      ],
      "accounts": [
        {
          "name": "owner",
          "writable": true,
          "signer": true
        },
        {
          "name": "order",
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  111,
                  114,
                  100,
                  101,
                  114
                ]
              },
              {
                "kind": "account",
                "path": "owner"
              },
              {
                "kind": "arg",
                "path": "order_id"
              }
            ]
          }
        },
        {
          "name": "baskt",
          "docs": [
            "Baskt account"
          ]
        },
        {
          "name": "owner_token",
          "writable": true
        },
        {
          "name": "escrow_mint"
        },
        {
          "name": "escrow_token",
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  117,
                  115,
                  101,
                  114,
                  95,
                  101,
                  115,
                  99,
                  114,
                  111,
                  119
                ]
              },
              {
                "kind": "account",
                "path": "owner"
              }
            ]
          }
        },
        {
          "name": "program_authority",
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  97,
                  117,
                  116,
                  104,
                  111,
                  114,
                  105,
                  116,
                  121
                ]
              }
            ]
          }
        },
        {
          "name": "protocol",
          "docs": [
            "Protocol account to verify feature flags"
          ],
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  112,
                  114,
                  111,
                  116,
                  111,
                  99,
                  111,
                  108
                ]
              }
            ]
          }
        },
        {
          "name": "system_program",
          "address": "11111111111111111111111111111111"
        },
        {
          "name": "token_program",
          "address": "TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA"
        },
        {
          "name": "rent",
          "address": "SysvarRent111111111111111111111111111111111"
        }
      ],
      "args": [
        {
          "name": "order_id",
          "type": "u64"
        },
        {
          "name": "size",
          "type": "u64"
        },
        {
          "name": "collateral",
          "type": "u64"
        },
        {
          "name": "is_long",
          "type": "bool"
        },
        {
          "name": "action",
          "type": {
            "defined": {
              "name": "OrderAction"
            }
          }
        },
        {
          "name": "target_position",
          "type": {
            "option": "pubkey"
          }
        },
        {
          "name": "limit_price",
          "type": "u64"
        },
        {
          "name": "max_slippage_bps",
          "type": "u64"
        },
        {
          "name": "leverage_bps",
          "type": "u64"
        },
        {
          "name": "order_type",
          "type": {
            "defined": {
              "name": "OrderType"
            }
          }
        }
      ]
    },
    {
      "name": "decommission_baskt",
      "discriminator": [
        18,
        111,
        38,
        100,
        153,
        152,
        218,
        148
      ],
      "accounts": [
        {
          "name": "baskt",
          "writable": true
        },
        {
          "name": "authority",
          "docs": [
            "Authority that can decommission (OracleManager or Owner for emergency)"
          ],
          "signer": true
        },
        {
          "name": "protocol",
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  112,
                  114,
                  111,
                  116,
                  111,
                  99,
                  111,
                  108
                ]
              }
            ]
          }
        }
      ],
      "args": []
    },
    {
      "name": "force_close_position",
      "discriminator": [
        109,
        177,
        151,
        242,
        227,
        130,
        79,
        37
      ],
      "accounts": [
        {
          "name": "authority",
          "docs": [
            "OracleManager who can force close positions"
          ],
          "signer": true
        },
        {
          "name": "position",
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  112,
                  111,
                  115,
                  105,
                  116,
                  105,
                  111,
                  110
                ]
              },
              {
                "kind": "account",
                "path": "position.owner",
                "account": "Position"
              },
              {
                "kind": "account",
                "path": "position.position_id",
                "account": "Position"
              }
            ]
          }
        },
        {
          "name": "baskt",
          "writable": true
        },
        {
          "name": "protocol",
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  112,
                  114,
                  111,
                  116,
                  111,
                  99,
                  111,
                  108
                ]
              }
            ]
          }
        },
        {
          "name": "liquidity_pool",
          "docs": [
            "Liquidity pool to update state"
          ],
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  108,
                  105,
                  113,
                  117,
                  105,
                  100,
                  105,
                  116,
                  121,
                  95,
                  112,
                  111,
                  111,
                  108
                ]
              }
            ]
          }
        },
        {
          "name": "escrow_token",
          "docs": [
            "Position escrow token account"
          ],
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  101,
                  115,
                  99,
                  114,
                  111,
                  119
                ]
              },
              {
                "kind": "account",
                "path": "position"
              }
            ]
          }
        },
        {
          "name": "program_authority",
          "docs": [
            "Program authority PDA"
          ],
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  97,
                  117,
                  116,
                  104,
                  111,
                  114,
                  105,
                  116,
                  121
                ]
              }
            ]
          }
        },
        {
          "name": "pool_authority",
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  112,
                  111,
                  111,
                  108,
                  95,
                  97,
                  117,
                  116,
                  104,
                  111,
                  114,
                  105,
                  116,
                  121
                ]
              },
              {
                "kind": "account",
                "path": "liquidity_pool"
              },
              {
                "kind": "account",
                "path": "protocol"
              }
            ]
          }
        },
        {
          "name": "token_program",
          "address": "TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA"
        }
      ],
      "args": [
        {
          "name": "params",
          "type": {
            "defined": {
              "name": "ForceClosePositionParams"
            }
          }
        }
      ]
    },
    {
      "name": "initialize_funding_index",
      "discriminator": [
        150,
        223,
        168,
        231,
        205,
        101,
        166,
        21
      ],
      "accounts": [
        {
          "name": "authority",
          "docs": [
            "@dev Requires Owner role to initialize funding indices"
          ],
          "writable": true,
          "signer": true
        },
        {
          "name": "funding_index",
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  102,
                  117,
                  110,
                  100,
                  105,
                  110,
                  103,
                  95,
                  105,
                  110,
                  100,
                  101,
                  120
                ]
              },
              {
                "kind": "account",
                "path": "baskt"
              }
            ]
          }
        },
        {
          "name": "baskt",
          "docs": [
            "Baskt account to initialize funding index for."
          ]
        },
        {
          "name": "protocol",
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  112,
                  114,
                  111,
                  116,
                  111,
                  99,
                  111,
                  108
                ]
              }
            ]
          }
        },
        {
          "name": "system_program",
          "address": "11111111111111111111111111111111"
        }
      ],
      "args": []
    },
    {
      "name": "initialize_liquidity_pool",
      "discriminator": [
        155,
        18,
        138,
        107,
        111,
        23,
        178,
        178
      ],
      "accounts": [
        {
          "name": "admin",
          "docs": [
            "Admin with Owner role who can initialize the pool"
          ],
          "writable": true,
          "signer": true
        },
        {
          "name": "protocol",
          "docs": [
            "Protocol account to verify admin role",
            "@dev Requires Owner role to initialize liquidity pool"
          ],
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  112,
                  114,
                  111,
                  116,
                  111,
                  99,
                  111,
                  108
                ]
              }
            ]
          }
        },
        {
          "name": "liquidity_pool",
          "docs": [
            "Liquidity pool account to initialize"
          ],
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  108,
                  105,
                  113,
                  117,
                  105,
                  100,
                  105,
                  116,
                  121,
                  95,
                  112,
                  111,
                  111,
                  108
                ]
              }
            ]
          }
        },
        {
          "name": "lp_mint",
          "docs": [
            "The mint that will be used for LP tokens"
          ],
          "writable": true,
          "signer": true
        },
        {
          "name": "token_vault",
          "docs": [
            "The token account that will hold the pool's assets"
          ],
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  116,
                  111,
                  107,
                  101,
                  110,
                  95,
                  118,
                  97,
                  117,
                  108,
                  116
                ]
              },
              {
                "kind": "account",
                "path": "liquidity_pool"
              }
            ]
          }
        },
        {
          "name": "token_mint",
          "docs": [
            "The mint of the token used for collateral"
          ]
        },
        {
          "name": "pool_authority",
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  112,
                  111,
                  111,
                  108,
                  95,
                  97,
                  117,
                  116,
                  104,
                  111,
                  114,
                  105,
                  116,
                  121
                ]
              },
              {
                "kind": "account",
                "path": "liquidity_pool"
              },
              {
                "kind": "account",
                "path": "protocol"
              }
            ]
          }
        },
        {
          "name": "system_program",
          "address": "11111111111111111111111111111111"
        },
        {
          "name": "token_program",
          "address": "TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA"
        },
        {
          "name": "rent",
          "address": "SysvarRent111111111111111111111111111111111"
        }
      ],
      "args": [
        {
          "name": "deposit_fee_bps",
          "type": "u16"
        },
        {
          "name": "withdrawal_fee_bps",
          "type": "u16"
        },
        {
          "name": "min_deposit",
          "type": "u64"
        }
      ]
    },
    {
      "name": "initialize_protocol",
      "discriminator": [
        188,
        233,
        252,
        106,
        134,
        146,
        202,
        91
      ],
      "accounts": [
        {
          "name": "authority",
          "writable": true,
          "signer": true
        },
        {
          "name": "protocol",
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  112,
                  114,
                  111,
                  116,
                  111,
                  99,
                  111,
                  108
                ]
              }
            ]
          }
        },
        {
          "name": "escrow_mint",
          "docs": [
            "Escrow mint (USDC)"
          ]
        },
        {
          "name": "program_authority",
          "docs": [
            "Program authority PDA - created during protocol initialization"
          ],
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  97,
                  117,
                  116,
                  104,
                  111,
                  114,
                  105,
                  116,
                  121
                ]
              }
            ]
          }
        },
        {
          "name": "system_program",
          "address": "11111111111111111111111111111111"
        }
      ],
      "args": [
        {
          "name": "treasury",
          "type": "pubkey"
        }
      ]
    },
    {
      "name": "liquidate_position",
      "discriminator": [
        187,
        74,
        229,
        149,
        102,
        81,
        221,
        68
      ],
      "accounts": [
        {
          "name": "liquidator",
          "writable": true,
          "signer": true
        },
        {
          "name": "position",
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  112,
                  111,
                  115,
                  105,
                  116,
                  105,
                  111,
                  110
                ]
              },
              {
                "kind": "account",
                "path": "position.owner",
                "account": "Position"
              },
              {
                "kind": "account",
                "path": "position.position_id",
                "account": "Position"
              }
            ]
          }
        },
        {
          "name": "position_owner"
        },
        {
          "name": "funding_index",
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  102,
                  117,
                  110,
                  100,
                  105,
                  110,
                  103,
                  95,
                  105,
                  110,
                  100,
                  101,
                  120
                ]
              },
              {
                "kind": "account",
                "path": "position.baskt_id",
                "account": "Position"
              }
            ]
          }
        },
        {
          "name": "baskt",
          "writable": true
        },
        {
          "name": "protocol",
          "docs": [
            "Protocol for permission checks"
          ],
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  112,
                  114,
                  111,
                  116,
                  111,
                  99,
                  111,
                  108
                ]
              }
            ]
          }
        },
        {
          "name": "liquidity_pool",
          "docs": [
            "Liquidity pool"
          ],
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  108,
                  105,
                  113,
                  117,
                  105,
                  100,
                  105,
                  116,
                  121,
                  95,
                  112,
                  111,
                  111,
                  108
                ]
              }
            ]
          }
        },
        {
          "name": "treasury",
          "docs": [
            "CHECK Treasury account"
          ]
        },
        {
          "name": "escrow_token",
          "docs": [
            "Position escrow token account"
          ],
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  101,
                  115,
                  99,
                  114,
                  111,
                  119
                ]
              },
              {
                "kind": "account",
                "path": "position"
              }
            ]
          }
        },
        {
          "name": "program_authority",
          "docs": [
            "PDA used for token authority over escrow"
          ],
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  97,
                  117,
                  116,
                  104,
                  111,
                  114,
                  105,
                  116,
                  121
                ]
              }
            ]
          }
        },
        {
          "name": "pool_authority",
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  112,
                  111,
                  111,
                  108,
                  95,
                  97,
                  117,
                  116,
                  104,
                  111,
                  114,
                  105,
                  116,
                  121
                ]
              },
              {
                "kind": "account",
                "path": "liquidity_pool"
              },
              {
                "kind": "account",
                "path": "protocol"
              }
            ]
          }
        },
        {
          "name": "token_program",
          "address": "TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA"
        }
      ],
      "args": [
        {
          "name": "params",
          "type": {
            "defined": {
              "name": "LiquidatePositionParams"
            }
          }
        }
      ]
    },
    {
      "name": "open_position",
      "discriminator": [
        135,
        128,
        47,
        77,
        15,
        152,
        240,
        49
      ],
      "accounts": [
        {
          "name": "matcher",
          "writable": true,
          "signer": true
        },
        {
          "name": "order",
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  111,
                  114,
                  100,
                  101,
                  114
                ]
              },
              {
                "kind": "account",
                "path": "order.owner",
                "account": "Order"
              },
              {
                "kind": "account",
                "path": "order.order_id",
                "account": "Order"
              }
            ]
          }
        },
        {
          "name": "position",
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  112,
                  111,
                  115,
                  105,
                  116,
                  105,
                  111,
                  110
                ]
              },
              {
                "kind": "account",
                "path": "order.owner",
                "account": "Order"
              },
              {
                "kind": "arg",
                "path": "params.position_id"
              }
            ]
          }
        },
        {
          "name": "funding_index",
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  102,
                  117,
                  110,
                  100,
                  105,
                  110,
                  103,
                  95,
                  105,
                  110,
                  100,
                  101,
                  120
                ]
              },
              {
                "kind": "account",
                "path": "order.baskt_id",
                "account": "Order"
              }
            ]
          }
        },
        {
          "name": "baskt",
          "docs": [
            "Baskt account that contains the embedded oracle for price validation"
          ],
          "writable": true
        },
        {
          "name": "protocol",
          "docs": [
            "Protocol account for checking permissions",
            "@dev Requires Matcher role to open positions"
          ],
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  112,
                  114,
                  111,
                  116,
                  111,
                  99,
                  111,
                  108
                ]
              }
            ]
          }
        },
        {
          "name": "liquidity_pool",
          "docs": [
            "Liquidity pool for account validation and fee accounting"
          ],
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  108,
                  105,
                  113,
                  117,
                  105,
                  100,
                  105,
                  116,
                  121,
                  95,
                  112,
                  111,
                  111,
                  108
                ]
              }
            ]
          }
        },
        {
          "name": "order_escrow",
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  117,
                  115,
                  101,
                  114,
                  95,
                  101,
                  115,
                  99,
                  114,
                  111,
                  119
                ]
              },
              {
                "kind": "account",
                "path": "order.owner",
                "account": "Order"
              }
            ]
          }
        },
        {
          "name": "escrow_token",
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  101,
                  115,
                  99,
                  114,
                  111,
                  119
                ]
              },
              {
                "kind": "account",
                "path": "position"
              }
            ]
          }
        },
        {
          "name": "program_authority",
          "docs": [
            "PDA used for token authority over escrow"
          ],
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  97,
                  117,
                  116,
                  104,
                  111,
                  114,
                  105,
                  116,
                  121
                ]
              }
            ]
          }
        },
        {
          "name": "escrow_mint",
          "docs": [
            "Escrow mint (USDC) - validated via protocol"
          ]
        },
        {
          "name": "system_program",
          "address": "11111111111111111111111111111111"
        },
        {
          "name": "token_program",
          "address": "TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA"
        },
        {
          "name": "rent",
          "address": "SysvarRent111111111111111111111111111111111"
        }
      ],
      "args": [
        {
          "name": "params",
          "type": {
            "defined": {
              "name": "OpenPositionParams"
            }
          }
        }
      ]
    },
    {
      "name": "rebalance",
      "discriminator": [
        108,
        158,
        77,
        9,
        210,
        52,
        88,
        62
      ],
      "accounts": [
        {
          "name": "baskt",
          "writable": true
        },
        {
          "name": "rebalance_history",
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  114,
                  101,
                  98,
                  97,
                  108,
                  97,
                  110,
                  99,
                  101,
                  95,
                  104,
                  105,
                  115,
                  116,
                  111,
                  114,
                  121
                ]
              },
              {
                "kind": "account",
                "path": "baskt.baskt_id",
                "account": "Baskt"
              },
              {
                "kind": "account",
                "path": "baskt.last_rebalance_index",
                "account": "Baskt"
              }
            ]
          }
        },
        {
          "name": "payer",
          "docs": [
            "@dev Requires either baskt creator or Rebalancer role to rebalance"
          ],
          "writable": true,
          "signer": true
        },
        {
          "name": "protocol",
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  112,
                  114,
                  111,
                  116,
                  111,
                  99,
                  111,
                  108
                ]
              }
            ]
          }
        },
        {
          "name": "system_program",
          "address": "11111111111111111111111111111111"
        }
      ],
      "args": [
        {
          "name": "asset_configs",
          "type": {
            "vec": {
              "defined": {
                "name": "AssetConfig"
              }
            }
          }
        }
      ]
    },
    {
      "name": "remove_liquidity",
      "discriminator": [
        80,
        85,
        209,
        72,
        24,
        206,
        177,
        108
      ],
      "accounts": [
        {
          "name": "provider",
          "docs": [
            "The liquidity provider"
          ],
          "writable": true,
          "signer": true
        },
        {
          "name": "liquidity_pool",
          "docs": [
            "The liquidity pool account"
          ],
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  108,
                  105,
                  113,
                  117,
                  105,
                  100,
                  105,
                  116,
                  121,
                  95,
                  112,
                  111,
                  111,
                  108
                ]
              }
            ]
          }
        },
        {
          "name": "protocol",
          "docs": [
            "Protocol account to verify feature flags"
          ],
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  112,
                  114,
                  111,
                  116,
                  111,
                  99,
                  111,
                  108
                ]
              }
            ]
          }
        },
        {
          "name": "provider_token_account",
          "docs": [
            "The provider's token account to receive funds"
          ],
          "writable": true
        },
        {
          "name": "token_vault",
          "docs": [
            "The vault that holds the pool's assets"
          ],
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  116,
                  111,
                  107,
                  101,
                  110,
                  95,
                  118,
                  97,
                  117,
                  108,
                  116
                ]
              },
              {
                "kind": "account",
                "path": "liquidity_pool"
              }
            ]
          }
        },
        {
          "name": "provider_lp_account",
          "docs": [
            "The provider's LP token account to burn LP tokens from"
          ],
          "writable": true
        },
        {
          "name": "lp_mint",
          "docs": [
            "The LP token mint"
          ],
          "writable": true
        },
        {
          "name": "treasury_token_account",
          "writable": true
        },
        {
          "name": "treasury"
        },
        {
          "name": "pool_authority",
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  112,
                  111,
                  111,
                  108,
                  95,
                  97,
                  117,
                  116,
                  104,
                  111,
                  114,
                  105,
                  116,
                  121
                ]
              },
              {
                "kind": "account",
                "path": "liquidity_pool"
              },
              {
                "kind": "account",
                "path": "protocol"
              }
            ]
          }
        },
        {
          "name": "token_program",
          "address": "TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA"
        }
      ],
      "args": [
        {
          "name": "lp_amount",
          "type": "u64"
        },
        {
          "name": "min_tokens_out",
          "type": "u64"
        }
      ]
    },
    {
      "name": "remove_role",
      "discriminator": [
        74,
        69,
        168,
        163,
        248,
        3,
        130,
        0
      ],
      "accounts": [
        {
          "name": "owner",
          "docs": [
            "@dev Requires Owner role to remove roles from other accounts"
          ],
          "writable": true,
          "signer": true
        },
        {
          "name": "account",
          "docs": [
            "Account to remove the role from"
          ]
        },
        {
          "name": "protocol",
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  112,
                  114,
                  111,
                  116,
                  111,
                  99,
                  111,
                  108
                ]
              }
            ]
          }
        }
      ],
      "args": [
        {
          "name": "role_type",
          "type": "u8"
        }
      ]
    },
    {
      "name": "set_baskt_closing_fee_bps",
      "discriminator": [
        221,
        101,
        129,
        68,
        37,
        222,
        146,
        84
      ],
      "accounts": [
        {
          "name": "authority",
          "docs": [
            "Authority that can modify baskt config"
          ],
          "writable": true,
          "signer": true
        },
        {
          "name": "baskt",
          "docs": [
            "Baskt account to update"
          ],
          "writable": true
        },
        {
          "name": "protocol",
          "docs": [
            "Protocol account for role checking"
          ],
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  112,
                  114,
                  111,
                  116,
                  111,
                  99,
                  111,
                  108
                ]
              }
            ]
          }
        }
      ],
      "args": [
        {
          "name": "new_closing_fee_bps",
          "type": {
            "option": "u64"
          }
        }
      ]
    },
    {
      "name": "set_baskt_liquidation_fee_bps",
      "discriminator": [
        135,
        100,
        171,
        91,
        162,
        158,
        226,
        36
      ],
      "accounts": [
        {
          "name": "authority",
          "docs": [
            "Authority that can modify baskt config"
          ],
          "writable": true,
          "signer": true
        },
        {
          "name": "baskt",
          "docs": [
            "Baskt account to update"
          ],
          "writable": true
        },
        {
          "name": "protocol",
          "docs": [
            "Protocol account for role checking"
          ],
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  112,
                  114,
                  111,
                  116,
                  111,
                  99,
                  111,
                  108
                ]
              }
            ]
          }
        }
      ],
      "args": [
        {
          "name": "new_liquidation_fee_bps",
          "type": {
            "option": "u64"
          }
        }
      ]
    },
    {
      "name": "set_baskt_liquidation_threshold_bps",
      "discriminator": [
        79,
        130,
        174,
        106,
        60,
        213,
        50,
        73
      ],
      "accounts": [
        {
          "name": "authority",
          "docs": [
            "Authority that can modify baskt config"
          ],
          "writable": true,
          "signer": true
        },
        {
          "name": "baskt",
          "docs": [
            "Baskt account to update"
          ],
          "writable": true
        },
        {
          "name": "protocol",
          "docs": [
            "Protocol account for role checking"
          ],
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  112,
                  114,
                  111,
                  116,
                  111,
                  99,
                  111,
                  108
                ]
              }
            ]
          }
        }
      ],
      "args": [
        {
          "name": "new_liquidation_threshold_bps",
          "type": {
            "option": "u64"
          }
        }
      ]
    },
    {
      "name": "set_baskt_min_collateral_ratio_bps",
      "discriminator": [
        131,
        192,
        20,
        188,
        210,
        35,
        201,
        163
      ],
      "accounts": [
        {
          "name": "authority",
          "docs": [
            "Authority that can modify baskt config"
          ],
          "writable": true,
          "signer": true
        },
        {
          "name": "baskt",
          "docs": [
            "Baskt account to update"
          ],
          "writable": true
        },
        {
          "name": "protocol",
          "docs": [
            "Protocol account for role checking"
          ],
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  112,
                  114,
                  111,
                  116,
                  111,
                  99,
                  111,
                  108
                ]
              }
            ]
          }
        }
      ],
      "args": [
        {
          "name": "new_min_collateral_ratio_bps",
          "type": {
            "option": "u64"
          }
        }
      ]
    },
    {
      "name": "set_baskt_opening_fee_bps",
      "discriminator": [
        197,
        44,
        153,
        105,
        230,
        244,
        44,
        88
      ],
      "accounts": [
        {
          "name": "authority",
          "docs": [
            "Authority that can modify baskt config"
          ],
          "writable": true,
          "signer": true
        },
        {
          "name": "baskt",
          "docs": [
            "Baskt account to update"
          ],
          "writable": true
        },
        {
          "name": "protocol",
          "docs": [
            "Protocol account for role checking"
          ],
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  112,
                  114,
                  111,
                  116,
                  111,
                  99,
                  111,
                  108
                ]
              }
            ]
          }
        }
      ],
      "args": [
        {
          "name": "new_opening_fee_bps",
          "type": {
            "option": "u64"
          }
        }
      ]
    },
    {
      "name": "set_closing_fee_bps",
      "discriminator": [
        228,
        245,
        238,
        120,
        199,
        91,
        4,
        228
      ],
      "accounts": [
        {
          "name": "authority",
          "writable": true,
          "signer": true
        },
        {
          "name": "protocol",
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  112,
                  114,
                  111,
                  116,
                  111,
                  99,
                  111,
                  108
                ]
              }
            ]
          }
        }
      ],
      "args": [
        {
          "name": "new_closing_fee_bps",
          "type": "u64"
        }
      ]
    },
    {
      "name": "set_decommission_grace_period",
      "discriminator": [
        16,
        167,
        202,
        231,
        140,
        192,
        215,
        110
      ],
      "accounts": [
        {
          "name": "authority",
          "docs": [
            "Signer that must have the ConfigManager or Owner role"
          ],
          "writable": true,
          "signer": true
        },
        {
          "name": "protocol",
          "docs": [
            "Protocol account containing configuration"
          ],
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  112,
                  114,
                  111,
                  116,
                  111,
                  99,
                  111,
                  108
                ]
              }
            ]
          }
        }
      ],
      "args": [
        {
          "name": "new_grace_period",
          "type": "i64"
        }
      ]
    },
    {
      "name": "set_funding_cut_bps",
      "discriminator": [
        187,
        140,
        188,
        89,
        202,
        49,
        175,
        65
      ],
      "accounts": [
        {
          "name": "authority",
          "docs": [
            "Signer that must have the ConfigManager role"
          ],
          "writable": true,
          "signer": true
        },
        {
          "name": "protocol",
          "docs": [
            "Protocol account containing configuration"
          ],
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  112,
                  114,
                  111,
                  116,
                  111,
                  99,
                  111,
                  108
                ]
              }
            ]
          }
        }
      ],
      "args": [
        {
          "name": "new_funding_cut_bps",
          "type": "u64"
        }
      ]
    },
    {
      "name": "set_liquidation_fee_bps",
      "discriminator": [
        133,
        242,
        86,
        151,
        4,
        91,
        77,
        161
      ],
      "accounts": [
        {
          "name": "authority",
          "writable": true,
          "signer": true
        },
        {
          "name": "protocol",
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  112,
                  114,
                  111,
                  116,
                  111,
                  99,
                  111,
                  108
                ]
              }
            ]
          }
        }
      ],
      "args": [
        {
          "name": "new_liquidation_fee_bps",
          "type": "u64"
        }
      ]
    },
    {
      "name": "set_liquidation_price_deviation_bps",
      "discriminator": [
        184,
        175,
        8,
        148,
        26,
        157,
        41,
        201
      ],
      "accounts": [
        {
          "name": "authority",
          "writable": true,
          "signer": true
        },
        {
          "name": "protocol",
          "docs": [
            "Protocol account"
          ],
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  112,
                  114,
                  111,
                  116,
                  111,
                  99,
                  111,
                  108
                ]
              }
            ]
          }
        }
      ],
      "args": [
        {
          "name": "new_liquidation_price_deviation_bps",
          "type": "u64"
        }
      ]
    },
    {
      "name": "set_liquidation_threshold_bps",
      "discriminator": [
        240,
        171,
        134,
        1,
        231,
        151,
        240,
        201
      ],
      "accounts": [
        {
          "name": "authority",
          "docs": [
            "Signer that must have the ConfigManager role"
          ],
          "writable": true,
          "signer": true
        },
        {
          "name": "protocol",
          "docs": [
            "Protocol account containing configuration"
          ],
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  112,
                  114,
                  111,
                  116,
                  111,
                  99,
                  111,
                  108
                ]
              }
            ]
          }
        }
      ],
      "args": [
        {
          "name": "new_liquidation_threshold_bps",
          "type": "u64"
        }
      ]
    },
    {
      "name": "set_max_price_age_sec",
      "discriminator": [
        151,
        79,
        152,
        153,
        44,
        126,
        222,
        41
      ],
      "accounts": [
        {
          "name": "authority",
          "writable": true,
          "signer": true
        },
        {
          "name": "protocol",
          "docs": [
            "Protocol account"
          ],
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  112,
                  114,
                  111,
                  116,
                  111,
                  99,
                  111,
                  108
                ]
              }
            ]
          }
        }
      ],
      "args": [
        {
          "name": "new_max_price_age_sec",
          "type": "u32"
        }
      ]
    },
    {
      "name": "set_max_price_deviation_bps",
      "discriminator": [
        13,
        166,
        196,
        104,
        129,
        190,
        209,
        150
      ],
      "accounts": [
        {
          "name": "authority",
          "writable": true,
          "signer": true
        },
        {
          "name": "protocol",
          "docs": [
            "Protocol account"
          ],
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  112,
                  114,
                  111,
                  116,
                  111,
                  99,
                  111,
                  108
                ]
              }
            ]
          }
        }
      ],
      "args": [
        {
          "name": "new_max_price_deviation_bps",
          "type": "u64"
        }
      ]
    },
    {
      "name": "set_min_collateral_ratio_bps",
      "discriminator": [
        227,
        204,
        66,
        98,
        143,
        96,
        99,
        122
      ],
      "accounts": [
        {
          "name": "authority",
          "docs": [
            "Signer that must have the ConfigManager role"
          ],
          "writable": true,
          "signer": true
        },
        {
          "name": "protocol",
          "docs": [
            "Protocol account containing configuration"
          ],
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  112,
                  114,
                  111,
                  116,
                  111,
                  99,
                  111,
                  108
                ]
              }
            ]
          }
        }
      ],
      "args": [
        {
          "name": "new_min_collateral_ratio_bps",
          "type": "u64"
        }
      ]
    },
    {
      "name": "set_min_liquidity",
      "discriminator": [
        162,
        147,
        87,
        130,
        193,
        136,
        3,
        58
      ],
      "accounts": [
        {
          "name": "authority",
          "writable": true,
          "signer": true
        },
        {
          "name": "protocol",
          "docs": [
            "Protocol account"
          ],
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  112,
                  114,
                  111,
                  116,
                  111,
                  99,
                  111,
                  108
                ]
              }
            ]
          }
        }
      ],
      "args": [
        {
          "name": "new_min_liquidity",
          "type": "u64"
        }
      ]
    },
    {
      "name": "set_opening_fee_bps",
      "discriminator": [
        157,
        25,
        242,
        124,
        119,
        236,
        144,
        81
      ],
      "accounts": [
        {
          "name": "authority",
          "writable": true,
          "signer": true
        },
        {
          "name": "protocol",
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  112,
                  114,
                  111,
                  116,
                  111,
                  99,
                  111,
                  108
                ]
              }
            ]
          }
        }
      ],
      "args": [
        {
          "name": "new_opening_fee_bps",
          "type": "u64"
        }
      ]
    },
    {
      "name": "set_treasury_cut_bps",
      "discriminator": [
        127,
        177,
        56,
        177,
        157,
        146,
        191,
        230
      ],
      "accounts": [
        {
          "name": "authority",
          "docs": [
            "Signer that must have the ConfigManager role"
          ],
          "writable": true,
          "signer": true
        },
        {
          "name": "protocol",
          "docs": [
            "Protocol account containing configuration"
          ],
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  112,
                  114,
                  111,
                  116,
                  111,
                  99,
                  111,
                  108
                ]
              }
            ]
          }
        }
      ],
      "args": [
        {
          "name": "new_treasury_cut_bps",
          "type": "u64"
        }
      ]
    },
    {
      "name": "settle_baskt",
      "discriminator": [
        45,
        247,
        64,
        159,
        193,
        173,
        34,
        192
      ],
      "accounts": [
        {
          "name": "baskt",
          "writable": true
        },
        {
          "name": "authority",
          "docs": [
            "Authority that can settle (OracleManager)"
          ],
          "signer": true
        },
        {
          "name": "funding_index",
          "docs": [
            "Funding index account for this baskt"
          ],
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  102,
                  117,
                  110,
                  100,
                  105,
                  110,
                  103,
                  95,
                  105,
                  110,
                  100,
                  101,
                  120
                ]
              },
              {
                "kind": "account",
                "path": "baskt"
              }
            ]
          }
        },
        {
          "name": "protocol",
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  112,
                  114,
                  111,
                  116,
                  111,
                  99,
                  111,
                  108
                ]
              }
            ]
          }
        }
      ],
      "args": []
    },
    {
      "name": "update_baskt_config",
      "discriminator": [
        231,
        139,
        249,
        181,
        181,
        140,
        50,
        232
      ],
      "accounts": [
        {
          "name": "authority",
          "docs": [
            "Authority that can modify baskt config"
          ],
          "writable": true,
          "signer": true
        },
        {
          "name": "baskt",
          "docs": [
            "Baskt account to update"
          ],
          "writable": true
        },
        {
          "name": "protocol",
          "docs": [
            "Protocol account for role checking"
          ],
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  112,
                  114,
                  111,
                  116,
                  111,
                  99,
                  111,
                  108
                ]
              }
            ]
          }
        }
      ],
      "args": [
        {
          "name": "params",
          "type": {
            "defined": {
              "name": "UpdateBasktConfigParams"
            }
          }
        }
      ]
    },
    {
      "name": "update_custom_oracle",
      "discriminator": [
        92,
        133,
        3,
        62,
        0,
        27,
        254,
        99
      ],
      "accounts": [
        {
          "name": "baskt",
          "writable": true
        },
        {
          "name": "authority",
          "docs": [
            "@dev Requires OracleManager role to update oracle prices"
          ],
          "writable": true,
          "signer": true
        },
        {
          "name": "protocol",
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  112,
                  114,
                  111,
                  116,
                  111,
                  99,
                  111,
                  108
                ]
              }
            ]
          }
        }
      ],
      "args": [
        {
          "name": "price",
          "type": "u64"
        }
      ]
    },
    {
      "name": "update_feature_flags",
      "discriminator": [
        139,
        88,
        184,
        214,
        40,
        6,
        55,
        247
      ],
      "accounts": [
        {
          "name": "owner",
          "docs": [
            "@dev Requires Owner role to update feature flags"
          ],
          "writable": true,
          "signer": true
        },
        {
          "name": "protocol",
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  112,
                  114,
                  111,
                  116,
                  111,
                  99,
                  111,
                  108
                ]
              }
            ]
          }
        }
      ],
      "args": [
        {
          "name": "params",
          "type": {
            "defined": {
              "name": "UpdateFeatureFlagsParams"
            }
          }
        }
      ]
    },
    {
      "name": "update_funding_index",
      "discriminator": [
        27,
        238,
        109,
        184,
        62,
        17,
        163,
        149
      ],
      "accounts": [
        {
          "name": "authority",
          "docs": [
            "@dev Requires FundingManager role to update funding indices"
          ],
          "writable": true,
          "signer": true
        },
        {
          "name": "funding_index",
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  102,
                  117,
                  110,
                  100,
                  105,
                  110,
                  103,
                  95,
                  105,
                  110,
                  100,
                  101,
                  120
                ]
              },
              {
                "kind": "account",
                "path": "baskt"
              }
            ]
          }
        },
        {
          "name": "baskt",
          "docs": [
            "Baskt account associated with the funding index. Used only for seed verification."
          ]
        },
        {
          "name": "protocol",
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  112,
                  114,
                  111,
                  116,
                  111,
                  99,
                  111,
                  108
                ]
              }
            ]
          }
        }
      ],
      "args": [
        {
          "name": "new_rate",
          "type": "i64"
        }
      ]
    },
    {
      "name": "update_treasury",
      "discriminator": [
        60,
        16,
        243,
        66,
        96,
        59,
        254,
        131
      ],
      "accounts": [
        {
          "name": "authority",
          "docs": [
            "Signer must be Owner or ConfigManager"
          ],
          "writable": true,
          "signer": true
        },
        {
          "name": "protocol",
          "docs": [
            "Protocol account"
          ],
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  112,
                  114,
                  111,
                  116,
                  111,
                  99,
                  111,
                  108
                ]
              }
            ]
          }
        }
      ],
      "args": [
        {
          "name": "new_treasury",
          "type": "pubkey"
        }
      ]
    }
  ],
  "accounts": [
    {
      "name": "Baskt",
      "discriminator": [
        105,
        38,
        119,
        212,
        185,
        63,
        190,
        248
      ]
    },
    {
      "name": "FundingIndex",
      "discriminator": [
        205,
        206,
        185,
        89,
        105,
        187,
        167,
        31
      ]
    },
    {
      "name": "LiquidityPool",
      "discriminator": [
        66,
        38,
        17,
        64,
        188,
        80,
        68,
        129
      ]
    },
    {
      "name": "Order",
      "discriminator": [
        134,
        173,
        223,
        185,
        77,
        86,
        28,
        51
      ]
    },
    {
      "name": "Position",
      "discriminator": [
        170,
        188,
        143,
        228,
        122,
        64,
        247,
        208
      ]
    },
    {
      "name": "ProgramAuthority",
      "discriminator": [
        38,
        198,
        188,
        60,
        171,
        210,
        169,
        38
      ]
    },
    {
      "name": "Protocol",
      "discriminator": [
        45,
        39,
        101,
        43,
        115,
        72,
        131,
        40
      ]
    },
    {
      "name": "RebalanceHistory",
      "discriminator": [
        99,
        118,
        90,
        210,
        209,
        145,
        80,
        204
      ]
    },
    {
      "name": "SyntheticAsset",
      "discriminator": [
        106,
        240,
        239,
        114,
        174,
        40,
        189,
        218
      ]
    }
  ],
  "events": [
    {
      "name": "BasktActivatedEvent",
      "discriminator": [
        88,
        137,
        206,
        103,
        196,
        4,
        65,
        8
      ]
    },
    {
      "name": "BasktClosed",
      "discriminator": [
        30,
        129,
        31,
        215,
        46,
        231,
        241,
        7
      ]
    },
    {
      "name": "BasktClosingFeeUpdatedEvent",
      "discriminator": [
        114,
        102,
        159,
        151,
        135,
        177,
        214,
        51
      ]
    },
    {
      "name": "BasktConfigUpdatedEvent",
      "discriminator": [
        161,
        255,
        126,
        226,
        10,
        130,
        31,
        137
      ]
    },
    {
      "name": "BasktCreatedEvent",
      "discriminator": [
        230,
        10,
        18,
        30,
        165,
        178,
        209,
        132
      ]
    },
    {
      "name": "BasktDecommissioningInitiated",
      "discriminator": [
        41,
        181,
        24,
        72,
        93,
        88,
        141,
        100
      ]
    },
    {
      "name": "BasktLiquidationFeeUpdatedEvent",
      "discriminator": [
        61,
        1,
        179,
        148,
        201,
        6,
        16,
        80
      ]
    },
    {
      "name": "BasktLiquidationThresholdUpdatedEvent",
      "discriminator": [
        68,
        199,
        154,
        67,
        138,
        139,
        99,
        30
      ]
    },
    {
      "name": "BasktMinCollateralRatioUpdatedEvent",
      "discriminator": [
        66,
        58,
        119,
        116,
        251,
        70,
        197,
        23
      ]
    },
    {
      "name": "BasktOpeningFeeUpdatedEvent",
      "discriminator": [
        232,
        143,
        250,
        62,
        74,
        131,
        26,
        73
      ]
    },
    {
      "name": "BasktRebalancedEvent",
      "discriminator": [
        201,
        140,
        15,
        4,
        88,
        198,
        74,
        170
      ]
    },
    {
      "name": "BasktSettled",
      "discriminator": [
        210,
        185,
        247,
        116,
        70,
        213,
        64,
        247
      ]
    },
    {
      "name": "ClosingFeeUpdatedEvent",
      "discriminator": [
        246,
        150,
        60,
        99,
        221,
        98,
        172,
        65
      ]
    },
    {
      "name": "CollateralAddedEvent",
      "discriminator": [
        90,
        251,
        19,
        246,
        134,
        164,
        243,
        177
      ]
    },
    {
      "name": "DecommissionGracePeriodUpdatedEvent",
      "discriminator": [
        38,
        24,
        170,
        112,
        8,
        51,
        75,
        37
      ]
    },
    {
      "name": "FundingCutUpdatedEvent",
      "discriminator": [
        179,
        9,
        120,
        174,
        151,
        9,
        14,
        60
      ]
    },
    {
      "name": "FundingIndexInitializedEvent",
      "discriminator": [
        103,
        198,
        106,
        15,
        181,
        173,
        213,
        165
      ]
    },
    {
      "name": "FundingIndexUpdatedEvent",
      "discriminator": [
        142,
        186,
        249,
        164,
        193,
        209,
        84,
        145
      ]
    },
    {
      "name": "LiquidationFeeUpdatedEvent",
      "discriminator": [
        17,
        142,
        252,
        220,
        94,
        31,
        151,
        239
      ]
    },
    {
      "name": "LiquidationPriceDeviationUpdatedEvent",
      "discriminator": [
        113,
        19,
        26,
        65,
        61,
        200,
        184,
        101
      ]
    },
    {
      "name": "LiquidationThresholdUpdatedEvent",
      "discriminator": [
        122,
        137,
        207,
        177,
        4,
        63,
        56,
        152
      ]
    },
    {
      "name": "LiquidityAddedEvent",
      "discriminator": [
        220,
        104,
        7,
        39,
        147,
        1,
        194,
        142
      ]
    },
    {
      "name": "LiquidityPoolInitializedEvent",
      "discriminator": [
        206,
        100,
        66,
        15,
        113,
        180,
        118,
        59
      ]
    },
    {
      "name": "LiquidityRemovedEvent",
      "discriminator": [
        233,
        117,
        13,
        70,
        229,
        1,
        106,
        215
      ]
    },
    {
      "name": "MaxPriceAgeUpdatedEvent",
      "discriminator": [
        214,
        87,
        62,
        199,
        1,
        35,
        196,
        139
      ]
    },
    {
      "name": "MaxPriceDeviationUpdatedEvent",
      "discriminator": [
        216,
        0,
        125,
        41,
        186,
        138,
        52,
        27
      ]
    },
    {
      "name": "MinCollateralRatioUpdatedEvent",
      "discriminator": [
        190,
        161,
        213,
        135,
        149,
        117,
        21,
        244
      ]
    },
    {
      "name": "MinLiquidityUpdatedEvent",
      "discriminator": [
        214,
        221,
        106,
        19,
        39,
        63,
        38,
        8
      ]
    },
    {
      "name": "OpeningFeeUpdatedEvent",
      "discriminator": [
        188,
        94,
        113,
        6,
        201,
        236,
        142,
        129
      ]
    },
    {
      "name": "OrderCancelledEvent",
      "discriminator": [
        200,
        73,
        179,
        145,
        247,
        176,
        10,
        101
      ]
    },
    {
      "name": "OrderCreatedEvent",
      "discriminator": [
        75,
        88,
        56,
        153,
        87,
        22,
        170,
        46
      ]
    },
    {
      "name": "OrderFilledEvent",
      "discriminator": [
        218,
        97,
        153,
        209,
        56,
        56,
        251,
        133
      ]
    },
    {
      "name": "PositionClosedEvent",
      "discriminator": [
        76,
        129,
        10,
        225,
        238,
        51,
        158,
        126
      ]
    },
    {
      "name": "PositionForceClosed",
      "discriminator": [
        169,
        152,
        228,
        17,
        218,
        207,
        1,
        119
      ]
    },
    {
      "name": "PositionLiquidatedEvent",
      "discriminator": [
        70,
        153,
        226,
        254,
        176,
        139,
        225,
        72
      ]
    },
    {
      "name": "PositionOpenedEvent",
      "discriminator": [
        163,
        1,
        92,
        149,
        138,
        188,
        177,
        23
      ]
    },
    {
      "name": "RegistryInitializedEvent",
      "discriminator": [
        25,
        72,
        229,
        103,
        34,
        177,
        247,
        255
      ]
    },
    {
      "name": "TreasuryCutUpdatedEvent",
      "discriminator": [
        234,
        249,
        120,
        21,
        62,
        228,
        31,
        79
      ]
    },
    {
      "name": "TreasuryUpdatedEvent",
      "discriminator": [
        140,
        91,
        97,
        30,
        246,
        205,
        211,
        33
      ]
    }
  ],
  "errors": [
    {
      "code": 6000,
      "name": "MathOverflow",
      "msg": "Math operation overflow"
    },
    {
      "code": 6001,
      "name": "InvalidOracleAccount",
      "msg": "Invalid oracle account"
    },
    {
      "code": 6002,
      "name": "OraclePriceTooOld",
      "msg": "Oracle price is too old"
    },
    {
      "code": 6003,
      "name": "OraclePriceTooUncertain",
      "msg": "Oracle price has too much uncertainty"
    },
    {
      "code": 6004,
      "name": "InsufficientCollateral",
      "msg": "Insufficient collateral for position"
    },
    {
      "code": 6005,
      "name": "PositionNotLiquidatable",
      "msg": "Position is not liquidatable"
    },
    {
      "code": 6006,
      "name": "PositionAlreadyClosed",
      "msg": "Position is already closed"
    },
    {
      "code": 6007,
      "name": "InsufficientLiquidity",
      "msg": "Insufficient liquidity in pool"
    },
    {
      "code": 6008,
      "name": "InvalidBasktConfig",
      "msg": "Invalid baskt configuration"
    },
    {
      "code": 6009,
      "name": "InvalidPositionSize",
      "msg": "Invalid position size"
    },
    {
      "code": 6010,
      "name": "Unauthorized",
      "msg": "Unauthorized access"
    },
    {
      "code": 6011,
      "name": "UnauthorizedRole",
      "msg": "Unauthorized: Missing required role for this operation"
    },
    {
      "code": 6012,
      "name": "UnauthorizedTokenOwner",
      "msg": "Unauthorized: Token account owner mismatch"
    },
    {
      "code": 6013,
      "name": "InvalidLpTokenAmount",
      "msg": "Invalid LP token amount"
    },
    {
      "code": 6014,
      "name": "UnsupportedOracle",
      "msg": "Unsupported oracle type"
    },
    {
      "code": 6015,
      "name": "StaleOraclePrice",
      "msg": "Stale oracle price"
    },
    {
      "code": 6016,
      "name": "InvalidOraclePrice",
      "msg": "Invalid oracle price"
    },
    {
      "code": 6017,
      "name": "PriceOutOfBounds",
      "msg": "Submitted price is outside acceptable deviation bounds from oracle price"
    },
    {
      "code": 6018,
      "name": "InsufficientFunds",
      "msg": "Insufficient funds for operation"
    },
    {
      "code": 6019,
      "name": "InvalidBasktName",
      "msg": "Invalid baskt name"
    },
    {
      "code": 6020,
      "name": "BasktInactive",
      "msg": "Baskt is inactive"
    },
    {
      "code": 6021,
      "name": "RoleNotFound",
      "msg": "Role not found for the account"
    },
    {
      "code": 6022,
      "name": "MissingRequiredRole",
      "msg": "Missing required role for this operation"
    },
    {
      "code": 6023,
      "name": "UnauthorizedSigner",
      "msg": "Unauthorized signer for this operation"
    },
    {
      "code": 6024,
      "name": "InvalidRoleType",
      "msg": "Invalid role type"
    },
    {
      "code": 6025,
      "name": "InvalidRemainingAccounts",
      "msg": "Invalid remaining accounts"
    },
    {
      "code": 6026,
      "name": "InvalidAssetAccount",
      "msg": "Invalid asset account"
    },
    {
      "code": 6027,
      "name": "LongPositionsDisabled",
      "msg": "Long positions are disabled for this asset"
    },
    {
      "code": 6028,
      "name": "ShortPositionsDisabled",
      "msg": "Short positions are disabled for this asset"
    },
    {
      "code": 6029,
      "name": "InvalidOrStaleOraclePrice",
      "msg": "Invalid or stale oracle price"
    },
    {
      "code": 6030,
      "name": "AssetNotInBaskt",
      "msg": "Asset not in baskt"
    },
    {
      "code": 6031,
      "name": "InvalidAssetConfig",
      "msg": "Invalid asset config"
    },
    {
      "code": 6032,
      "name": "FeatureDisabled",
      "msg": "Feature is currently disabled"
    },
    {
      "code": 6033,
      "name": "TradingDisabled",
      "msg": "Trading operations are currently disabled"
    },
    {
      "code": 6034,
      "name": "LiquidityOperationsDisabled",
      "msg": "Liquidity pool operations are currently disabled"
    },
    {
      "code": 6035,
      "name": "PositionOperationsDisabled",
      "msg": "Position operations are currently disabled"
    },
    {
      "code": 6036,
      "name": "BasktOperationsDisabled",
      "msg": "Baskt management operations are currently disabled"
    },
    {
      "code": 6037,
      "name": "InactiveAsset",
      "msg": "Asset Not Active"
    },
    {
      "code": 6038,
      "name": "BasktAlreadyActive",
      "msg": "Baskt Already Active"
    },
    {
      "code": 6039,
      "name": "InvalidAssetWeights",
      "msg": "Invalid asset weights"
    },
    {
      "code": 6040,
      "name": "InvalidOracleParameter",
      "msg": "Invalid oracle parameter"
    },
    {
      "code": 6041,
      "name": "OrderAlreadyProcessed",
      "msg": "Order already processed"
    },
    {
      "code": 6042,
      "name": "InvalidEscrowAccount",
      "msg": "Invalid escrow account"
    },
    {
      "code": 6043,
      "name": "InvalidProgramAuthority",
      "msg": "Invalid program authority"
    },
    {
      "code": 6044,
      "name": "TokenHasDelegate",
      "msg": "Token has delegate"
    },
    {
      "code": 6045,
      "name": "TokenHasCloseAuthority",
      "msg": "Token has close authority"
    },
    {
      "code": 6046,
      "name": "InvalidMint",
      "msg": "Invalid mint"
    },
    {
      "code": 6047,
      "name": "ZeroSizedPosition",
      "msg": "Zero sized position"
    },
    {
      "code": 6048,
      "name": "InvalidTargetPosition",
      "msg": "Invalid target position"
    },
    {
      "code": 6049,
      "name": "InvalidBaskt",
      "msg": "Invalid baskt"
    },
    {
      "code": 6050,
      "name": "InvalidOrderAction",
      "msg": "Invalid order action"
    },
    {
      "code": 6051,
      "name": "FundingNotUpToDate",
      "msg": "Funding not up to date"
    },
    {
      "code": 6052,
      "name": "PositionStillOpen",
      "msg": "Position still open"
    },
    {
      "code": 6053,
      "name": "InvalidTreasuryAccount",
      "msg": "Invalid treasury account"
    },
    {
      "code": 6054,
      "name": "CollateralOverflow",
      "msg": "Collateral amount would overflow maximum value"
    },
    {
      "code": 6055,
      "name": "DepositsDisabled",
      "msg": "Liquidity pool deposits are currently disabled"
    },
    {
      "code": 6056,
      "name": "WithdrawalsDisabled",
      "msg": "Liquidity pool withdrawals are currently disabled"
    },
    {
      "code": 6057,
      "name": "BelowMinimumDeposit",
      "msg": "Deposit amount is below the minimum"
    },
    {
      "code": 6058,
      "name": "DivisionByZero",
      "msg": "Division by zero"
    },
    {
      "code": 6059,
      "name": "InvalidLiquidityPool",
      "msg": "Invalid liquidity pool account"
    },
    {
      "code": 6060,
      "name": "InvalidTokenVault",
      "msg": "Invalid token vault account"
    },
    {
      "code": 6061,
      "name": "SlippageExceeded",
      "msg": "Slippage tolerance exceeded"
    },
    {
      "code": 6062,
      "name": "InvalidFeeBps",
      "msg": "Invalid fee basis points"
    },
    {
      "code": 6063,
      "name": "InvalidCollateralRatio",
      "msg": "Invalid collateral ratio"
    },
    {
      "code": 6064,
      "name": "FundingRateExceedsMaximum",
      "msg": "Funding rate exceeds maximum allowed"
    },
    {
      "code": 6065,
      "name": "InvalidPoolAuthority",
      "msg": "Invalid pool authority account"
    },
    {
      "code": 6066,
      "name": "InvalidAccountInput",
      "msg": "Invalid account input"
    },
    {
      "code": 6067,
      "name": "InvalidOwner",
      "msg": "Invalid owner"
    },
    {
      "code": 6068,
      "name": "InvalidFundingIndex",
      "msg": "Invalid funding index account"
    },
    {
      "code": 6069,
      "name": "InvalidOracle",
      "msg": "Invalid oracle account"
    },
    {
      "code": 6070,
      "name": "InvalidBasktState",
      "msg": "Invalid baskt state for this operation"
    },
    {
      "code": 6071,
      "name": "BasktNotActive",
      "msg": "Baskt is not active for trading"
    },
    {
      "code": 6072,
      "name": "BasktNotSettled",
      "msg": "Baskt is not settled"
    },
    {
      "code": 6073,
      "name": "GracePeriodNotOver",
      "msg": "Grace period has not ended"
    },
    {
      "code": 6074,
      "name": "PositionsStillOpen",
      "msg": "Positions are still open"
    },
    {
      "code": 6075,
      "name": "InvalidGracePeriod",
      "msg": "Invalid grace period - must be between 1 hour and 7 days"
    },
    {
      "code": 6076,
      "name": "PriceDeviationTooHigh",
      "msg": "Price deviation too high"
    },
    {
      "code": 6077,
      "name": "LeverageExceeded",
      "msg": "Realised leverage exceeds declared leverage amount"
    }
  ],
  "types": [
    {
      "name": "AccessControl",
      "docs": [
        "Access control system for the protocol"
      ],
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "entries",
            "docs": [
              "Map of accounts to their roles"
            ],
            "type": {
              "vec": {
                "defined": {
                  "name": "AccessControlEntry"
                }
              }
            }
          }
        ]
      }
    },
    {
      "name": "AccessControlEntry",
      "docs": [
        "Access control entry for a specific account"
      ],
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "account",
            "docs": [
              "The account that has this role"
            ],
            "type": "pubkey"
          },
          {
            "name": "role",
            "docs": [
              "The role assigned to this account"
            ],
            "type": {
              "defined": {
                "name": "Role"
              }
            }
          }
        ]
      }
    },
    {
      "name": "ActivateBasktParams",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "prices",
            "type": {
              "vec": "u64"
            }
          },
          {
            "name": "max_price_age_sec",
            "type": "u32"
          }
        ]
      }
    },
    {
      "name": "AddAssetParams",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "permissions",
            "type": {
              "defined": {
                "name": "AssetPermissions"
              }
            }
          },
          {
            "name": "ticker",
            "type": "string"
          }
        ]
      }
    },
    {
      "name": "AddCollateralParams",
      "docs": [
        "Parameters for adding collateral to a position"
      ],
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "additional_collateral",
            "type": "u64"
          }
        ]
      }
    },
    {
      "name": "AssetConfig",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "asset_id",
            "type": "pubkey"
          },
          {
            "name": "direction",
            "type": "bool"
          },
          {
            "name": "weight",
            "type": "u64"
          },
          {
            "name": "baseline_price",
            "type": "u64"
          }
        ]
      }
    },
    {
      "name": "AssetPermissions",
      "docs": [
        "Permissions for the asset"
      ],
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "allow_longs",
            "type": "bool"
          },
          {
            "name": "allow_shorts",
            "type": "bool"
          }
        ]
      }
    },
    {
      "name": "Baskt",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "baskt_id",
            "type": "pubkey"
          },
          {
            "name": "baskt_name",
            "type": "string"
          },
          {
            "name": "current_asset_configs",
            "type": {
              "vec": {
                "defined": {
                  "name": "AssetConfig"
                }
              }
            }
          },
          {
            "name": "is_public",
            "type": "bool"
          },
          {
            "name": "creator",
            "type": "pubkey"
          },
          {
            "name": "creation_time",
            "type": "i64"
          },
          {
            "name": "last_rebalance_index",
            "type": "u64"
          },
          {
            "name": "status",
            "type": {
              "defined": {
                "name": "BasktStatus"
              }
            }
          },
          {
            "name": "open_positions",
            "type": "u64"
          },
          {
            "name": "last_rebalance_time",
            "type": "i64"
          },
          {
            "name": "oracle",
            "type": {
              "defined": {
                "name": "OracleParams"
              }
            }
          },
          {
            "name": "baseline_nav",
            "type": "u64"
          },
          {
            "name": "bump",
            "type": "u8"
          },
          {
            "name": "config",
            "type": {
              "defined": {
                "name": "BasktConfig"
              }
            }
          },
          {
            "name": "extra_space",
            "type": {
              "array": [
                "u8",
                128
              ]
            }
          }
        ]
      }
    },
    {
      "name": "BasktActivatedEvent",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "baskt_id",
            "type": "pubkey"
          },
          {
            "name": "baseline_nav",
            "type": "u64"
          },
          {
            "name": "timestamp",
            "type": "i64"
          }
        ]
      }
    },
    {
      "name": "BasktClosed",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "baskt",
            "type": "pubkey"
          },
          {
            "name": "final_nav",
            "type": "u64"
          },
          {
            "name": "closed_at",
            "type": "i64"
          }
        ]
      }
    },
    {
      "name": "BasktClosingFeeUpdatedEvent",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "baskt",
            "type": "pubkey"
          },
          {
            "name": "old_closing_fee_bps",
            "type": {
              "option": "u64"
            }
          },
          {
            "name": "new_closing_fee_bps",
            "type": {
              "option": "u64"
            }
          },
          {
            "name": "updated_by",
            "type": "pubkey"
          },
          {
            "name": "timestamp",
            "type": "i64"
          }
        ]
      }
    },
    {
      "name": "BasktConfig",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "opening_fee_bps",
            "type": {
              "option": "u64"
            }
          },
          {
            "name": "closing_fee_bps",
            "type": {
              "option": "u64"
            }
          },
          {
            "name": "liquidation_fee_bps",
            "type": {
              "option": "u64"
            }
          },
          {
            "name": "min_collateral_ratio_bps",
            "type": {
              "option": "u64"
            }
          },
          {
            "name": "liquidation_threshold_bps",
            "type": {
              "option": "u64"
            }
          }
        ]
      }
    },
    {
      "name": "BasktConfigUpdatedEvent",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "baskt",
            "type": "pubkey"
          },
          {
            "name": "old_config",
            "type": {
              "defined": {
                "name": "BasktConfig"
              }
            }
          },
          {
            "name": "new_config",
            "type": {
              "defined": {
                "name": "BasktConfig"
              }
            }
          },
          {
            "name": "updated_by",
            "type": "pubkey"
          },
          {
            "name": "timestamp",
            "type": "i64"
          }
        ]
      }
    },
    {
      "name": "BasktCreatedEvent",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "baskt_id",
            "type": "pubkey"
          },
          {
            "name": "baskt_name",
            "type": "string"
          },
          {
            "name": "creator",
            "type": "pubkey"
          },
          {
            "name": "is_public",
            "type": "bool"
          },
          {
            "name": "asset_count",
            "type": "u8"
          },
          {
            "name": "timestamp",
            "type": "i64"
          }
        ]
      }
    },
    {
      "name": "BasktDecommissioningInitiated",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "baskt",
            "type": "pubkey"
          },
          {
            "name": "initiated_at",
            "type": "i64"
          },
          {
            "name": "grace_period_end",
            "type": "i64"
          },
          {
            "name": "open_positions",
            "type": "u64"
          }
        ]
      }
    },
    {
      "name": "BasktLiquidationFeeUpdatedEvent",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "baskt",
            "type": "pubkey"
          },
          {
            "name": "old_liquidation_fee_bps",
            "type": {
              "option": "u64"
            }
          },
          {
            "name": "new_liquidation_fee_bps",
            "type": {
              "option": "u64"
            }
          },
          {
            "name": "updated_by",
            "type": "pubkey"
          },
          {
            "name": "timestamp",
            "type": "i64"
          }
        ]
      }
    },
    {
      "name": "BasktLiquidationThresholdUpdatedEvent",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "baskt",
            "type": "pubkey"
          },
          {
            "name": "old_liquidation_threshold_bps",
            "type": {
              "option": "u64"
            }
          },
          {
            "name": "new_liquidation_threshold_bps",
            "type": {
              "option": "u64"
            }
          },
          {
            "name": "updated_by",
            "type": "pubkey"
          },
          {
            "name": "timestamp",
            "type": "i64"
          }
        ]
      }
    },
    {
      "name": "BasktMinCollateralRatioUpdatedEvent",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "baskt",
            "type": "pubkey"
          },
          {
            "name": "old_min_collateral_ratio_bps",
            "type": {
              "option": "u64"
            }
          },
          {
            "name": "new_min_collateral_ratio_bps",
            "type": {
              "option": "u64"
            }
          },
          {
            "name": "updated_by",
            "type": "pubkey"
          },
          {
            "name": "timestamp",
            "type": "i64"
          }
        ]
      }
    },
    {
      "name": "BasktOpeningFeeUpdatedEvent",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "baskt",
            "type": "pubkey"
          },
          {
            "name": "old_opening_fee_bps",
            "type": {
              "option": "u64"
            }
          },
          {
            "name": "new_opening_fee_bps",
            "type": {
              "option": "u64"
            }
          },
          {
            "name": "updated_by",
            "type": "pubkey"
          },
          {
            "name": "timestamp",
            "type": "i64"
          }
        ]
      }
    },
    {
      "name": "BasktRebalancedEvent",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "baskt_id",
            "type": "pubkey"
          },
          {
            "name": "rebalance_index",
            "type": "u64"
          },
          {
            "name": "baseline_nav",
            "type": "u64"
          },
          {
            "name": "timestamp",
            "type": "i64"
          }
        ]
      }
    },
    {
      "name": "BasktSettled",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "baskt",
            "type": "pubkey"
          },
          {
            "name": "settlement_price",
            "type": "u64"
          },
          {
            "name": "settlement_funding_index",
            "type": "i128"
          },
          {
            "name": "settled_at",
            "type": "i64"
          },
          {
            "name": "remaining_positions",
            "type": "u64"
          }
        ]
      }
    },
    {
      "name": "BasktStatus",
      "type": {
        "kind": "enum",
        "variants": [
          {
            "name": "Pending"
          },
          {
            "name": "Active"
          },
          {
            "name": "Decommissioning",
            "fields": [
              {
                "name": "initiated_at",
                "type": "i64"
              },
              {
                "name": "grace_period_end",
                "type": "i64"
              }
            ]
          },
          {
            "name": "Settled",
            "fields": [
              {
                "name": "settlement_price",
                "type": "u64"
              },
              {
                "name": "settlement_funding_index",
                "type": "i128"
              },
              {
                "name": "settled_at",
                "type": "i64"
              }
            ]
          },
          {
            "name": "Closed",
            "fields": [
              {
                "name": "final_nav",
                "type": "u64"
              },
              {
                "name": "closed_at",
                "type": "i64"
              }
            ]
          }
        ]
      }
    },
    {
      "name": "ClosePositionParams",
      "docs": [
        "Parameters for closing a position"
      ],
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "exit_price",
            "type": "u64"
          }
        ]
      }
    },
    {
      "name": "ClosingFeeUpdatedEvent",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "protocol",
            "type": "pubkey"
          },
          {
            "name": "old_closing_fee_bps",
            "type": "u64"
          },
          {
            "name": "new_closing_fee_bps",
            "type": "u64"
          },
          {
            "name": "updated_by",
            "type": "pubkey"
          },
          {
            "name": "timestamp",
            "type": "i64"
          }
        ]
      }
    },
    {
      "name": "CollateralAddedEvent",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "owner",
            "type": "pubkey"
          },
          {
            "name": "position_id",
            "type": "u64"
          },
          {
            "name": "baskt_id",
            "type": "pubkey"
          },
          {
            "name": "additional_collateral",
            "type": "u64"
          },
          {
            "name": "new_total_collateral",
            "type": "u64"
          },
          {
            "name": "timestamp",
            "type": "i64"
          }
        ]
      }
    },
    {
      "name": "CreateBasktAssetParams",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "weight",
            "type": "u64"
          },
          {
            "name": "direction",
            "type": "bool"
          }
        ]
      }
    },
    {
      "name": "CreateBasktParams",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "baskt_name",
            "type": "string"
          },
          {
            "name": "asset_params",
            "type": {
              "vec": {
                "defined": {
                  "name": "CreateBasktAssetParams"
                }
              }
            }
          },
          {
            "name": "is_public",
            "type": "bool"
          }
        ]
      }
    },
    {
      "name": "DecommissionGracePeriodUpdatedEvent",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "protocol",
            "type": "pubkey"
          },
          {
            "name": "old_grace_period",
            "type": "i64"
          },
          {
            "name": "new_grace_period",
            "type": "i64"
          },
          {
            "name": "updated_by",
            "type": "pubkey"
          },
          {
            "name": "timestamp",
            "type": "i64"
          }
        ]
      }
    },
    {
      "name": "FeatureFlags",
      "docs": [
        "Feature flags to enable or disable specific protocol features"
      ],
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "allow_add_liquidity",
            "docs": [
              "Allow adding liquidity to the protocol"
            ],
            "type": "bool"
          },
          {
            "name": "allow_remove_liquidity",
            "docs": [
              "Allow removing liquidity from the protocol"
            ],
            "type": "bool"
          },
          {
            "name": "allow_open_position",
            "docs": [
              "Allow opening new positions"
            ],
            "type": "bool"
          },
          {
            "name": "allow_close_position",
            "docs": [
              "Allow closing existing positions"
            ],
            "type": "bool"
          },
          {
            "name": "allow_pnl_withdrawal",
            "docs": [
              "Allow withdrawal of PnL"
            ],
            "type": "bool"
          },
          {
            "name": "allow_collateral_withdrawal",
            "docs": [
              "Allow withdrawal of collateral"
            ],
            "type": "bool"
          },
          {
            "name": "allow_add_collateral",
            "docs": [
              "Allow adding collateral to existing positions"
            ],
            "type": "bool"
          },
          {
            "name": "allow_baskt_creation",
            "docs": [
              "Allow creation of new baskts"
            ],
            "type": "bool"
          },
          {
            "name": "allow_baskt_update",
            "docs": [
              "Allow updating existing baskts"
            ],
            "type": "bool"
          },
          {
            "name": "allow_trading",
            "docs": [
              "Allow trading on the protocol"
            ],
            "type": "bool"
          },
          {
            "name": "allow_liquidations",
            "docs": [
              "Allow liquidations to occur"
            ],
            "type": "bool"
          }
        ]
      }
    },
    {
      "name": "ForceClosePositionParams",
      "docs": [
        "Parameters for force closing a position"
      ],
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "close_price",
            "docs": [
              "Price to use for closing the position"
            ],
            "type": "u64"
          }
        ]
      }
    },
    {
      "name": "FundingCutUpdatedEvent",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "protocol",
            "type": "pubkey"
          },
          {
            "name": "old_funding_cut_bps",
            "type": "u64"
          },
          {
            "name": "new_funding_cut_bps",
            "type": "u64"
          },
          {
            "name": "updated_by",
            "type": "pubkey"
          },
          {
            "name": "timestamp",
            "type": "i64"
          }
        ]
      }
    },
    {
      "name": "FundingIndex",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "baskt_id",
            "type": "pubkey"
          },
          {
            "name": "cumulative_index",
            "type": "i128"
          },
          {
            "name": "last_update_timestamp",
            "type": "i64"
          },
          {
            "name": "current_rate",
            "type": "i64"
          },
          {
            "name": "bump",
            "type": "u8"
          },
          {
            "name": "extra_space",
            "type": {
              "array": [
                "u8",
                128
              ]
            }
          }
        ]
      }
    },
    {
      "name": "FundingIndexInitializedEvent",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "baskt_id",
            "type": "pubkey"
          },
          {
            "name": "initial_index",
            "type": "i128"
          },
          {
            "name": "timestamp",
            "type": "i64"
          }
        ]
      }
    },
    {
      "name": "FundingIndexUpdatedEvent",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "baskt_id",
            "type": "pubkey"
          },
          {
            "name": "cumulative_index",
            "type": "i128"
          },
          {
            "name": "current_rate",
            "type": "i64"
          },
          {
            "name": "timestamp",
            "type": "i64"
          }
        ]
      }
    },
    {
      "name": "LiquidatePositionParams",
      "docs": [
        "Parameters for liquidating a position"
      ],
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "exit_price",
            "type": "u64"
          }
        ]
      }
    },
    {
      "name": "LiquidationFeeUpdatedEvent",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "protocol",
            "type": "pubkey"
          },
          {
            "name": "old_liquidation_fee_bps",
            "type": "u64"
          },
          {
            "name": "new_liquidation_fee_bps",
            "type": "u64"
          },
          {
            "name": "updated_by",
            "type": "pubkey"
          },
          {
            "name": "timestamp",
            "type": "i64"
          }
        ]
      }
    },
    {
      "name": "LiquidationPriceDeviationUpdatedEvent",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "protocol",
            "type": "pubkey"
          },
          {
            "name": "old_liquidation_price_deviation_bps",
            "type": "u64"
          },
          {
            "name": "new_liquidation_price_deviation_bps",
            "type": "u64"
          },
          {
            "name": "updated_by",
            "type": "pubkey"
          },
          {
            "name": "timestamp",
            "type": "i64"
          }
        ]
      }
    },
    {
      "name": "LiquidationThresholdUpdatedEvent",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "protocol",
            "type": "pubkey"
          },
          {
            "name": "old_liquidation_threshold_bps",
            "type": "u64"
          },
          {
            "name": "new_liquidation_threshold_bps",
            "type": "u64"
          },
          {
            "name": "updated_by",
            "type": "pubkey"
          },
          {
            "name": "timestamp",
            "type": "i64"
          }
        ]
      }
    },
    {
      "name": "LiquidityAddedEvent",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "provider",
            "type": "pubkey"
          },
          {
            "name": "liquidity_pool",
            "type": "pubkey"
          },
          {
            "name": "deposit_amount",
            "type": "u64"
          },
          {
            "name": "fee_amount",
            "type": "u64"
          },
          {
            "name": "shares_minted",
            "type": "u64"
          },
          {
            "name": "timestamp",
            "type": "i64"
          }
        ]
      }
    },
    {
      "name": "LiquidityPool",
      "docs": [
        "LiquidityPool represents the shared liquidity pool for the entire protocol",
        "This is a single pool that acts as the counterparty to all user positions"
      ],
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "total_liquidity",
            "docs": [
              "The total amount of liquidity in the pool"
            ],
            "type": "u64"
          },
          {
            "name": "lp_mint",
            "docs": [
              "The token mint for the LP tokens"
            ],
            "type": "pubkey"
          },
          {
            "name": "token_vault",
            "docs": [
              "The token account where collateral is stored"
            ],
            "type": "pubkey"
          },
          {
            "name": "total_shares",
            "docs": [
              "Total supply of LP tokens"
            ],
            "type": "u64"
          },
          {
            "name": "last_update_timestamp",
            "docs": [
              "The timestamp of the last pool update"
            ],
            "type": "i64"
          },
          {
            "name": "deposit_fee_bps",
            "docs": [
              "Fee percentage charged on deposits in basis points (e.g. 10 = 0.1%)"
            ],
            "type": "u16"
          },
          {
            "name": "withdrawal_fee_bps",
            "docs": [
              "Fee percentage charged on withdrawals in basis points (e.g. 30 = 0.3%)"
            ],
            "type": "u16"
          },
          {
            "name": "min_deposit",
            "docs": [
              "Minimum deposit amount allowed"
            ],
            "type": "u64"
          },
          {
            "name": "bump",
            "docs": [
              "Bump for this PDA"
            ],
            "type": "u8"
          },
          {
            "name": "pool_authority_bump",
            "docs": [
              "Bump for pool authority PDA"
            ],
            "type": "u8"
          }
        ]
      }
    },
    {
      "name": "LiquidityPoolInitializedEvent",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "liquidity_pool",
            "type": "pubkey"
          },
          {
            "name": "lp_mint",
            "type": "pubkey"
          },
          {
            "name": "token_vault",
            "type": "pubkey"
          },
          {
            "name": "deposit_fee_bps",
            "type": "u16"
          },
          {
            "name": "withdrawal_fee_bps",
            "type": "u16"
          },
          {
            "name": "min_deposit",
            "type": "u64"
          },
          {
            "name": "initializer",
            "type": "pubkey"
          },
          {
            "name": "timestamp",
            "type": "i64"
          }
        ]
      }
    },
    {
      "name": "LiquidityRemovedEvent",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "provider",
            "type": "pubkey"
          },
          {
            "name": "liquidity_pool",
            "type": "pubkey"
          },
          {
            "name": "shares_burned",
            "type": "u64"
          },
          {
            "name": "withdrawal_amount",
            "type": "u64"
          },
          {
            "name": "fee_amount",
            "type": "u64"
          },
          {
            "name": "net_amount_received",
            "type": "u64"
          },
          {
            "name": "timestamp",
            "type": "i64"
          }
        ]
      }
    },
    {
      "name": "MaxPriceAgeUpdatedEvent",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "protocol",
            "type": "pubkey"
          },
          {
            "name": "old_max_price_age_sec",
            "type": "u32"
          },
          {
            "name": "new_max_price_age_sec",
            "type": "u32"
          },
          {
            "name": "updated_by",
            "type": "pubkey"
          },
          {
            "name": "timestamp",
            "type": "i64"
          }
        ]
      }
    },
    {
      "name": "MaxPriceDeviationUpdatedEvent",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "protocol",
            "type": "pubkey"
          },
          {
            "name": "old_max_price_deviation_bps",
            "type": "u64"
          },
          {
            "name": "new_max_price_deviation_bps",
            "type": "u64"
          },
          {
            "name": "updated_by",
            "type": "pubkey"
          },
          {
            "name": "timestamp",
            "type": "i64"
          }
        ]
      }
    },
    {
      "name": "MinCollateralRatioUpdatedEvent",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "protocol",
            "type": "pubkey"
          },
          {
            "name": "old_min_collateral_ratio_bps",
            "type": "u64"
          },
          {
            "name": "new_min_collateral_ratio_bps",
            "type": "u64"
          },
          {
            "name": "updated_by",
            "type": "pubkey"
          },
          {
            "name": "timestamp",
            "type": "i64"
          }
        ]
      }
    },
    {
      "name": "MinLiquidityUpdatedEvent",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "protocol",
            "type": "pubkey"
          },
          {
            "name": "old_min_liquidity",
            "type": "u64"
          },
          {
            "name": "new_min_liquidity",
            "type": "u64"
          },
          {
            "name": "updated_by",
            "type": "pubkey"
          },
          {
            "name": "timestamp",
            "type": "i64"
          }
        ]
      }
    },
    {
      "name": "OpenPositionParams",
      "docs": [
        "Parameters for opening a position"
      ],
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "position_id",
            "type": "u64"
          },
          {
            "name": "entry_price",
            "type": "u64"
          }
        ]
      }
    },
    {
      "name": "OpeningFeeUpdatedEvent",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "protocol",
            "type": "pubkey"
          },
          {
            "name": "old_opening_fee_bps",
            "type": "u64"
          },
          {
            "name": "new_opening_fee_bps",
            "type": "u64"
          },
          {
            "name": "updated_by",
            "type": "pubkey"
          },
          {
            "name": "timestamp",
            "type": "i64"
          }
        ]
      }
    },
    {
      "name": "OracleParams",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "price",
            "type": "u64"
          },
          {
            "name": "max_price_age_sec",
            "type": "u32"
          },
          {
            "name": "publish_time",
            "type": "i64"
          }
        ]
      }
    },
    {
      "name": "Order",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "owner",
            "type": "pubkey"
          },
          {
            "name": "order_id",
            "type": "u64"
          },
          {
            "name": "baskt_id",
            "type": "pubkey"
          },
          {
            "name": "size",
            "type": "u64"
          },
          {
            "name": "collateral",
            "type": "u64"
          },
          {
            "name": "is_long",
            "type": "bool"
          },
          {
            "name": "action",
            "type": {
              "defined": {
                "name": "OrderAction"
              }
            }
          },
          {
            "name": "status",
            "type": {
              "defined": {
                "name": "OrderStatus"
              }
            }
          },
          {
            "name": "timestamp",
            "type": "i64"
          },
          {
            "name": "target_position",
            "type": {
              "option": "pubkey"
            }
          },
          {
            "name": "bump",
            "type": "u8"
          },
          {
            "name": "limit_price",
            "type": "u64"
          },
          {
            "name": "max_slippage_bps",
            "type": "u64"
          },
          {
            "name": "order_type",
            "type": {
              "defined": {
                "name": "OrderType"
              }
            }
          },
          {
            "name": "leverage_bps",
            "type": "u64"
          },
          {
            "name": "extra_space",
            "type": {
              "array": [
                "u8",
                88
              ]
            }
          }
        ]
      }
    },
    {
      "name": "OrderAction",
      "type": {
        "kind": "enum",
        "variants": [
          {
            "name": "Open"
          },
          {
            "name": "Close"
          }
        ]
      }
    },
    {
      "name": "OrderCancelledEvent",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "owner",
            "type": "pubkey"
          },
          {
            "name": "order_id",
            "type": "u64"
          },
          {
            "name": "baskt_id",
            "type": "pubkey"
          },
          {
            "name": "timestamp",
            "type": "i64"
          }
        ]
      }
    },
    {
      "name": "OrderCreatedEvent",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "owner",
            "type": "pubkey"
          },
          {
            "name": "order_id",
            "type": "u64"
          },
          {
            "name": "baskt_id",
            "type": "pubkey"
          },
          {
            "name": "size",
            "type": "u64"
          },
          {
            "name": "collateral",
            "type": "u64"
          },
          {
            "name": "is_long",
            "type": "bool"
          },
          {
            "name": "action",
            "type": {
              "defined": {
                "name": "OrderAction"
              }
            }
          },
          {
            "name": "target_position",
            "type": {
              "option": "pubkey"
            }
          },
          {
            "name": "limit_price",
            "type": "u64"
          },
          {
            "name": "max_slippage_bps",
            "type": "u64"
          },
          {
            "name": "order_type",
            "type": {
              "defined": {
                "name": "OrderType"
              }
            }
          },
          {
            "name": "leverage_bps",
            "type": "u64"
          },
          {
            "name": "timestamp",
            "type": "i64"
          }
        ]
      }
    },
    {
      "name": "OrderFilledEvent",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "owner",
            "type": "pubkey"
          },
          {
            "name": "order_id",
            "type": "u64"
          },
          {
            "name": "baskt_id",
            "type": "pubkey"
          },
          {
            "name": "action",
            "type": {
              "defined": {
                "name": "OrderAction"
              }
            }
          },
          {
            "name": "size",
            "type": "u64"
          },
          {
            "name": "fill_price",
            "type": "u64"
          },
          {
            "name": "position_id",
            "type": {
              "option": "u64"
            }
          },
          {
            "name": "target_position",
            "type": {
              "option": "pubkey"
            }
          },
          {
            "name": "timestamp",
            "type": "i64"
          }
        ]
      }
    },
    {
      "name": "OrderStatus",
      "type": {
        "kind": "enum",
        "variants": [
          {
            "name": "Pending"
          },
          {
            "name": "Filled"
          },
          {
            "name": "Cancelled"
          }
        ]
      }
    },
    {
      "name": "OrderType",
      "type": {
        "kind": "enum",
        "variants": [
          {
            "name": "Market"
          },
          {
            "name": "Limit"
          }
        ]
      }
    },
    {
      "name": "Position",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "owner",
            "type": "pubkey"
          },
          {
            "name": "position_id",
            "type": "u64"
          },
          {
            "name": "baskt_id",
            "type": "pubkey"
          },
          {
            "name": "size",
            "type": "u64"
          },
          {
            "name": "collateral",
            "type": "u64"
          },
          {
            "name": "is_long",
            "type": "bool"
          },
          {
            "name": "entry_price",
            "type": "u64"
          },
          {
            "name": "exit_price",
            "type": {
              "option": "u64"
            }
          },
          {
            "name": "entry_funding_index",
            "type": "i128"
          },
          {
            "name": "last_funding_index",
            "type": "i128"
          },
          {
            "name": "funding_accumulated",
            "type": "i128"
          },
          {
            "name": "status",
            "type": {
              "defined": {
                "name": "PositionStatus"
              }
            }
          },
          {
            "name": "timestamp_open",
            "type": "i64"
          },
          {
            "name": "timestamp_close",
            "type": {
              "option": "i64"
            }
          },
          {
            "name": "bump",
            "type": "u8"
          },
          {
            "name": "extra_space",
            "type": {
              "array": [
                "u8",
                128
              ]
            }
          }
        ]
      }
    },
    {
      "name": "PositionClosedEvent",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "order_id",
            "type": "u64"
          },
          {
            "name": "owner",
            "type": "pubkey"
          },
          {
            "name": "position_id",
            "type": "u64"
          },
          {
            "name": "baskt_id",
            "type": "pubkey"
          },
          {
            "name": "size",
            "type": "u64"
          },
          {
            "name": "exit_price",
            "type": "u64"
          },
          {
            "name": "pnl",
            "type": "i64"
          },
          {
            "name": "fee_to_treasury",
            "type": "u64"
          },
          {
            "name": "fee_to_blp",
            "type": "u64"
          },
          {
            "name": "funding_payment",
            "type": "i128"
          },
          {
            "name": "settlement_amount",
            "type": "u64"
          },
          {
            "name": "pool_payout",
            "type": "u64"
          },
          {
            "name": "timestamp",
            "type": "i64"
          }
        ]
      }
    },
    {
      "name": "PositionForceClosed",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "baskt",
            "type": "pubkey"
          },
          {
            "name": "position",
            "type": "pubkey"
          },
          {
            "name": "owner",
            "type": "pubkey"
          },
          {
            "name": "settlement_price",
            "type": "u64"
          },
          {
            "name": "close_price",
            "type": "u64"
          },
          {
            "name": "entry_price",
            "type": "u64"
          },
          {
            "name": "size",
            "type": "u64"
          },
          {
            "name": "is_long",
            "type": "bool"
          },
          {
            "name": "collateral_returned",
            "type": "u64"
          },
          {
            "name": "pnl",
            "type": "i64"
          },
          {
            "name": "funding_payment",
            "type": "i128"
          },
          {
            "name": "closed_by",
            "type": "pubkey"
          },
          {
            "name": "timestamp",
            "type": "i64"
          },
          {
            "name": "escrow_returned_to_pool",
            "type": "u64"
          },
          {
            "name": "pool_payout",
            "type": "u64"
          },
          {
            "name": "bad_debt_absorbed",
            "type": "u64"
          },
          {
            "name": "baskt_settlement_timestamp",
            "type": "i64"
          },
          {
            "name": "position_duration_seconds",
            "type": "i64"
          }
        ]
      }
    },
    {
      "name": "PositionLiquidatedEvent",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "owner",
            "type": "pubkey"
          },
          {
            "name": "position_id",
            "type": "u64"
          },
          {
            "name": "baskt_id",
            "type": "pubkey"
          },
          {
            "name": "size",
            "type": "u64"
          },
          {
            "name": "exit_price",
            "type": "u64"
          },
          {
            "name": "pnl",
            "type": "i64"
          },
          {
            "name": "fee_to_treasury",
            "type": "u64"
          },
          {
            "name": "fee_to_blp",
            "type": "u64"
          },
          {
            "name": "funding_payment",
            "type": "i128"
          },
          {
            "name": "remaining_collateral",
            "type": "u64"
          },
          {
            "name": "pool_payout",
            "type": "u64"
          },
          {
            "name": "timestamp",
            "type": "i64"
          }
        ]
      }
    },
    {
      "name": "PositionOpenedEvent",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "order_id",
            "type": "u64"
          },
          {
            "name": "owner",
            "type": "pubkey"
          },
          {
            "name": "position_id",
            "type": "u64"
          },
          {
            "name": "baskt_id",
            "type": "pubkey"
          },
          {
            "name": "size",
            "type": "u64"
          },
          {
            "name": "collateral",
            "type": "u64"
          },
          {
            "name": "is_long",
            "type": "bool"
          },
          {
            "name": "entry_price",
            "type": "u64"
          },
          {
            "name": "entry_funding_index",
            "type": "i128"
          },
          {
            "name": "fee_to_treasury",
            "type": "u64"
          },
          {
            "name": "fee_to_blp",
            "type": "u64"
          },
          {
            "name": "timestamp",
            "type": "i64"
          }
        ]
      }
    },
    {
      "name": "PositionStatus",
      "type": {
        "kind": "enum",
        "variants": [
          {
            "name": "Open"
          },
          {
            "name": "Closed"
          },
          {
            "name": "Liquidated"
          },
          {
            "name": "ForceClosed"
          }
        ]
      }
    },
    {
      "name": "ProgramAuthority",
      "type": {
        "kind": "struct",
        "fields": []
      }
    },
    {
      "name": "Protocol",
      "docs": [
        "* It should track all the assets that we have in the system.\n * it should keep track of all the fees we are charging and what not\n * it should keep track of min liqudiation margins\n * it should keep track of fee splits\n * it should keep track of owner and be able to transfer ownership\n * it should keep track of protocol level stats maybe? fees, trading, volume, total baskts, total assets"
      ],
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "is_initialized",
            "type": "bool"
          },
          {
            "name": "owner",
            "type": "pubkey"
          },
          {
            "name": "access_control",
            "type": {
              "defined": {
                "name": "AccessControl"
              }
            }
          },
          {
            "name": "feature_flags",
            "type": {
              "defined": {
                "name": "FeatureFlags"
              }
            }
          },
          {
            "name": "treasury",
            "type": "pubkey"
          },
          {
            "name": "escrow_mint",
            "docs": [
              "Escrow mint (USDC)"
            ],
            "type": "pubkey"
          },
          {
            "name": "config",
            "docs": [
              "Protocol configuration parameters"
            ],
            "type": {
              "defined": {
                "name": "ProtocolConfig"
              }
            }
          }
        ]
      }
    },
    {
      "name": "ProtocolConfig",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "opening_fee_bps",
            "docs": [
              "Fee parameters (in basis points)"
            ],
            "type": "u64"
          },
          {
            "name": "closing_fee_bps",
            "type": "u64"
          },
          {
            "name": "liquidation_fee_bps",
            "type": "u64"
          },
          {
            "name": "treasury_cut_bps",
            "docs": [
              "Fee split parameters (in basis points)"
            ],
            "type": "u64"
          },
          {
            "name": "funding_cut_bps",
            "type": "u64"
          },
          {
            "name": "max_funding_rate_bps",
            "docs": [
              "Funding parameters"
            ],
            "type": "u64"
          },
          {
            "name": "funding_interval_seconds",
            "type": "i64"
          },
          {
            "name": "min_collateral_ratio_bps",
            "docs": [
              "Risk parameters"
            ],
            "type": "u64"
          },
          {
            "name": "liquidation_threshold_bps",
            "type": "u64"
          },
          {
            "name": "max_price_age_sec",
            "docs": [
              "Oracle parameters"
            ],
            "type": "u32"
          },
          {
            "name": "max_price_deviation_bps",
            "type": "u64"
          },
          {
            "name": "liquidation_price_deviation_bps",
            "type": "u64"
          },
          {
            "name": "min_liquidity",
            "docs": [
              "Pool parameters"
            ],
            "type": "u64"
          },
          {
            "name": "decommission_grace_period",
            "docs": [
              "Baskt decommissioning parameters"
            ],
            "type": "i64"
          },
          {
            "name": "last_updated",
            "docs": [
              "Metadata"
            ],
            "type": "i64"
          },
          {
            "name": "last_updated_by",
            "type": "pubkey"
          }
        ]
      }
    },
    {
      "name": "RebalanceHistory",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "baskt_id",
            "type": "pubkey"
          },
          {
            "name": "rebalance_index",
            "type": "u64"
          },
          {
            "name": "asset_configs",
            "type": {
              "vec": {
                "defined": {
                  "name": "AssetConfig"
                }
              }
            }
          },
          {
            "name": "baseline_nav",
            "type": "u64"
          },
          {
            "name": "timestamp",
            "type": "i64"
          }
        ]
      }
    },
    {
      "name": "RegistryInitializedEvent",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "registry",
            "type": "pubkey"
          },
          {
            "name": "protocol",
            "type": "pubkey"
          },
          {
            "name": "treasury",
            "type": "pubkey"
          },
          {
            "name": "treasury_token",
            "type": "pubkey"
          },
          {
            "name": "liquidity_pool",
            "type": "pubkey"
          },
          {
            "name": "token_vault",
            "type": "pubkey"
          },
          {
            "name": "pool_authority",
            "type": "pubkey"
          },
          {
            "name": "program_authority",
            "type": "pubkey"
          },
          {
            "name": "escrow_mint",
            "type": "pubkey"
          },
          {
            "name": "initializer",
            "type": "pubkey"
          },
          {
            "name": "timestamp",
            "type": "i64"
          }
        ]
      }
    },
    {
      "name": "Role",
      "docs": [
        "Roles that can be assigned to accounts for access control"
      ],
      "type": {
        "kind": "enum",
        "variants": [
          {
            "name": "Owner"
          },
          {
            "name": "AssetManager"
          },
          {
            "name": "OracleManager"
          },
          {
            "name": "Rebalancer"
          },
          {
            "name": "Matcher"
          },
          {
            "name": "Liquidator"
          },
          {
            "name": "FundingManager"
          },
          {
            "name": "ConfigManager"
          }
        ]
      }
    },
    {
      "name": "SyntheticAsset",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "asset_id",
            "type": "pubkey"
          },
          {
            "name": "ticker",
            "type": "string"
          },
          {
            "name": "permissions",
            "type": {
              "defined": {
                "name": "AssetPermissions"
              }
            }
          },
          {
            "name": "is_active",
            "type": "bool"
          },
          {
            "name": "listing_time",
            "type": "i64"
          }
        ]
      }
    },
    {
      "name": "TreasuryCutUpdatedEvent",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "protocol",
            "type": "pubkey"
          },
          {
            "name": "old_treasury_cut_bps",
            "type": "u64"
          },
          {
            "name": "new_treasury_cut_bps",
            "type": "u64"
          },
          {
            "name": "updated_by",
            "type": "pubkey"
          },
          {
            "name": "timestamp",
            "type": "i64"
          }
        ]
      }
    },
    {
      "name": "TreasuryUpdatedEvent",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "protocol",
            "type": "pubkey"
          },
          {
            "name": "old_treasury",
            "type": "pubkey"
          },
          {
            "name": "new_treasury",
            "type": "pubkey"
          },
          {
            "name": "updated_by",
            "type": "pubkey"
          },
          {
            "name": "timestamp",
            "type": "i64"
          }
        ]
      }
    },
    {
      "name": "UpdateBasktConfigParams",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "opening_fee_bps",
            "type": {
              "option": "u64"
            }
          },
          {
            "name": "closing_fee_bps",
            "type": {
              "option": "u64"
            }
          },
          {
            "name": "liquidation_fee_bps",
            "type": {
              "option": "u64"
            }
          },
          {
            "name": "min_collateral_ratio_bps",
            "type": {
              "option": "u64"
            }
          },
          {
            "name": "liquidation_threshold_bps",
            "type": {
              "option": "u64"
            }
          }
        ]
      }
    },
    {
      "name": "UpdateFeatureFlagsParams",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "allow_add_liquidity",
            "type": "bool"
          },
          {
            "name": "allow_remove_liquidity",
            "type": "bool"
          },
          {
            "name": "allow_open_position",
            "type": "bool"
          },
          {
            "name": "allow_close_position",
            "type": "bool"
          },
          {
            "name": "allow_pnl_withdrawal",
            "type": "bool"
          },
          {
            "name": "allow_collateral_withdrawal",
            "type": "bool"
          },
          {
            "name": "allow_add_collateral",
            "type": "bool"
          },
          {
            "name": "allow_baskt_creation",
            "type": "bool"
          },
          {
            "name": "allow_baskt_update",
            "type": "bool"
          },
          {
            "name": "allow_trading",
            "type": "bool"
          },
          {
            "name": "allow_liquidations",
            "type": "bool"
          }
        ]
      }
    }
  ]
}